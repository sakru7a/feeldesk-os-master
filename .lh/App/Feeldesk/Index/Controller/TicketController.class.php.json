{
    "sourceFile": "App/Feeldesk/Index/Controller/TicketController.class.php",
    "activeCommit": 1,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [],
            "date": 1735522500002,
            "name": "Commit-0",
            "content": "<?php\n// +----------------------------------------------------------------------\n// | FeelDesk-DEV开源工单管理系统\n// +----------------------------------------------------------------------\n// | 欢迎阅读学习系统程序代码，您的建议反馈是我们前进的动力\n// | 开源版本仅供技术交流学习，请务必保留界面版权logo\n// | 商业版本务必购买商业授权，以免引起法律纠纷\n// | 禁止对系统程序代码以任何目的，任何形式的再发布\n// | gitee下载：https://gitee.com/feelecs/feeldesk-dev-base\n// | 开源官网：https://www.feeldesk.com.cn\n// | 成都菲莱克斯科技有限公司 版权所有 拥有最终解释权\n// +----------------------------------------------------------------------\nnamespace Index\\Controller;\n\nuse Index\\Common\\BasicController;\n\nuse Think\\Csv;\n\nclass TicketController extends BasicController\n{\n\tprotected static $ticket_status = [];\n\n\tprotected static $first_status = [];\n\n\tprotected static $end_status = [];\n\n\n\tpublic function _initialize()\n\t{\n\t\tparent::_initialize();\n\n\t\t$statusName = D('TicketStatus')->getNameByLang('status_name');\n\n\t\tself::$ticket_status = D('TicketStatus')->where(['company_id' => $this->_company_id])->field(\"*,{$statusName}\")->order('sort asc')->fetchAll();\n\n\t\tforeach (self::$ticket_status as $v) {\n\t\t\tif ($v['is_first'] == 1)\n\t\t\t\tself::$first_status = $v;\n\n\t\t\tif ($v['is_end'] == 1)\n\t\t\t\tself::$end_status = $v;\n\t\t}\n\n\t\t$this->assign('ticket_status', self::$ticket_status);\n\n\t\t$this->assign('ticketObj', D('Ticket'));\n\t}\n\n\n\t/*\n\t * 选择工单模板\n\t */\n\tpublic function template()\n\t{\n\t\t$ticketTemplate = D('TemplateType')->getTicketTempLate($this->_company_id, 1);\n\n\t\t$this->assign('ticketTemplate', $ticketTemplate);\n\n\t\t$this->display();\n\n\t}\n\n\n\t/*\n\t * 我发布的工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array $where 导出工单时的查询条件\n\t * @param string $field 需要导出的工单字段信息\n\t */\n\tpublic function myTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['member_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 所有工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function allTicket($source = '', $where = [], $field = '')\n\t{\n\n\t\t$defaultTemplateIds = [5]; // 设置默认模板ID为 5\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\t/*\n\t * 所有工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function allTicket2($source = '', $where = [], $field = '')\n\t{\n\t\t$defaultTemplateIds = [6, 7]; // 设置默认模板ID为 6 和 7\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\t/*\n\t * 提成工单\n\t */\n\tpublic function allTicket3($source = '', $where = [], $field = '')\n\t{\n\t\t// 默认模板ID为5\n\t\t$defaultTemplateIds = [5];\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t// 获取导出的数据\n\t\t$ticketExportData = session('TicketExportData');\n\n\t\t// 如果有导出的数据，传递到视图\n\t\tif ($ticketExportData) {\n\t\t\t$this->assign('excelData', $ticketExportData['excelData']);\n\t\t\t$this->assign('tableHeader', $ticketExportData['header']);\n\t\t\t$this->assign('commissionData', $ticketExportData['commissionData']);\n\t\t\t$this->assign('journalTypesToSummarize', $ticketExportData['journalTypesToSummarize']);\n\t\t}\n\n\n\n\n\n\n\t\t// 渲染视图\n\t\t$this->display();\n\t}\n\n\tpublic function allTicket4()\n\t{\n\t\t// 从 session 中获取导出的数据\n\t\t$ticketExportData = session('TicketExportData');\n\n\t\t// 如果有导出的数据，传递到视图\n\t\tif ($ticketExportData) {\n\t\t\t$this->assign('excelData', $ticketExportData['excelData']);\n\t\t\t$this->assign('tableHeader', $ticketExportData['header']);\n\t\t}\n\n\t\t// 渲染视图\n\t\t$this->display();\n\t}\n\n\n\n\t/*\n\t * 我处理的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function disposeTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['dispose_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我参与的\n\t * @param string $source 来源，当前只用于导出工单\n\t * $param array  $where 导出工单时的查询条件\n\t * $param string $field 需要导出的工单字段信息\n\t */\n\tpublic function partakeTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$partTickets = M('ticket_partake')->where(['company_id' => $this->_company_id, 'member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t$ticketIds = $partTickets ? array_column($partTickets, 'ticket_id') : '-1';\n\n\t\t$where['ticket_id'] = ['in', $ticketIds];\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我所在组的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function groupTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['group_id'] = ['in', $this->_member['group_id']];\n\n\t\t//        $where['dispose_id'] = ['eq',0];\n\n\t\t$group_id = M('Group')->where(['group_id' => ['in', $this->_member['group_id']], 'is_task' => 2])->getField('group_id');\n\n\t\tif ($group_id)\n\t\t\tunset($where['group_id']);\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 待审核的\n\t */\n\tpublic function waitAuditTicket()\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'audit_status' => ['in', [2, 4, 5, 6]], 'delete' => 2];\n\n\t\tif ($keyword = I('get.keyword')) {\n\t\t\t$where['title|ticket_no'] = ['LIKE', '%' . $keyword . '%'];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t//\t\t所有处于待审和被驳回的工单\n\t\t$tickets = M('ticket')->where($where)->field('ticket_id,title,ticket_no,member_id,ticket_from,create_time')->order('ticket_id asc')->select();\n\n\t\tforeach ($tickets as $k => $v) {\n\t\t\t//\t    \t1. 获取当前登录人员针对工单的审核节点信息\n\t\t\t$progress_map = ['ticket_id' => $v['ticket_id'], 'member_id' => $this->member_id, 'audit_status' => 10];\n\n\t\t\t$progress = M('audit_progress')->where($progress_map)->order('audit_level asc')->field('id,audit_level,audit_type')->find();\n\n\t\t\t//\t\t\t2. 若审核节点所处的审核类型为 会审\n\t\t\t$nowProgress = [];\n\n\t\t\tif ($progress['audit_type'] == 30) {\n\t\t\t\t//              3. 查询本层级中是否存在未审核的上一个节点\n\t\t\t\t$now_progress_map = ['ticket_id' => $v['ticket_id'], 'audit_status' => 10, 'audit_level' => $progress['audit_level'], 'id' => ['lt', $progress['id']]];\n\n\t\t\t\t$nowProgress = M('audit_progress')->where($now_progress_map)->field('id,member_id')->find();\n\t\t\t}\n\n\t\t\tif (!$nowProgress) {\n\t\t\t\t//\t    \t    4. 查询是否存在上一层级未审核的节点\n\t\t\t\t$upper_reviewer_map = ['ticket_id' => $v['ticket_id'], 'audit_status' => 10, 'audit_level' => ['lt', $progress['audit_level']]];\n\n\t\t\t\t//\t\t\t\t上一层级未审核的节点的审核人ID\n\t\t\t\t$upper_reviewer_id = M('audit_progress')->where($upper_reviewer_map)->getField('member_id');\n\n\t\t\t\t//\t\t\t\t不存在，但审核流程里有当前人员或者存在并且节点审核人 == 当前登录人员时有权限\n\t\t\t\t$audit_auth = !$upper_reviewer_id ? $progress['id'] : $upper_reviewer_id == $this->member_id;\n\t\t\t} else {\n\t\t\t\t//\t\t\t\t当审核层级类型为会审时，本层级存在未审核的上一节点时，当前人员没有审核权限\n\t\t\t\t$audit_auth = false;\n\t\t\t}\n\n\t\t\tif (!$audit_auth)\n\t\t\t\tunset($tickets[$k]);\n\t\t}\n\n\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('tickets', $tickets);\n\n\t\t$this->assign('members', $members);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我发布的待审核工单\n\t */\n\tpublic function waitAuditMyTicket()\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'member_id' => $this->member_id, 'audit_status' => ['in', [2, 4, 5]], 'delete' => 2];\n\n\t\tif ($keyword = I('get.keyword')) {\n\t\t\t$where['title|ticket_no'] = ['LIKE', '%' . $keyword . '%'];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t$tickets = M('ticket')->where($where)->field('ticket_id,title,ticket_no,member_id,ticket_from,create_time')->order('ticket_id asc')->select();\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('tickets', $tickets);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 抄送给我的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function ccTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$ccTicketIds = D('CcTicket')->where(['member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t$ticketIds = array_column($ccTicketIds, 'ticket_id');\n\n\t\t$ticketIds = $ticketIds ? $ticketIds : '-1';\n\n\t\t$where['ticket_id'] = ['in', $ticketIds];\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 待回复的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function waitReplyTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t//        当前登录人所有发布和处理的工单\n\t\t$list = $this->getTicketList($source, $where, $field, 'waitReplyTicket');\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 指定成员的\n\t * @param string $id     成员ID\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function memberTicket($id = '', $source = '', $where = [], $field = '')\n\t{\n\t\tif ($id) {\n\t\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t\t$where['member_id|related_id'] = $id;\n\n\t\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\t\tif ($source == 'export')\n\t\t\t\treturn $list;\n\n\t\t\t$this->assign('ticket', $list);\n\n\t\t\t$this->assign('id', $id);\n\n\t\t\t$this->display();\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\t/*\n\t * 超时的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function timeoutTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['dispose_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\t//        完成期限\n\t\t$deadlines = M('ticket_deadlines')->where(['company_id' => $this->_company_id])->select();\n\n\t\t$deadTimes = [];\n\n\t\tforeach ($deadlines as $d) {\n\t\t\t$deadTimes[$d['ticket_id']] = $d;\n\t\t}\n\n\t\t$deadTickets = $globalTickets = [];\n\n\t\tforeach ($list as $k => $v) {\n\t\t\t//            组件超时工单\n\t\t\tif ($deadTimes[$v['ticket_id']]) {\n\t\t\t\tif (checkTicketIsTimeoutByCron($deadTimes[$v['ticket_id']]['deadtime'], $v['end_time']) == true) {\n\t\t\t\t\t$deadTickets[$v['ticket_id']] = $v;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//                全局超时工单\n\t\t\t\tif (checkTicketIsTimeoutByGlobal($v['ticket_id'], $v['create_time'], $v['end_time'])) {\n\t\t\t\t\t$globalTickets[$v['ticket_id']] = $v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$tickets = $deadTickets + $globalTickets;\n\n\t\tkrsort($tickets);\n\n\t\tif ($source == 'export')\n\t\t\treturn $tickets;\n\n\t\t$this->assign('ticket', $tickets);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 回收站\n\t * @param string $keyword 搜索关键词\n\t */\n\tpublic function recycle($keyword = '')\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'delete' => 1];\n\n\t\tif ($keyword) {\n\t\t\t$where['title|ticket_no'] = [\"like\", \"%{$keyword}%\"];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t$count = D('Ticket')->where($where)->count('ticket_id');\n\n\t\t$Page = new \\Think\\Page($count, 400);\n\n\t\t$recycleData['tickets'] = D('Ticket')->where($where)\n\t\t\t->limit($Page->firstRow, $Page->listRows)\n\t\t\t->field('ticket_id,ticket_no,title,delete_time,delete_member_id,delete_ip')\n\t\t\t->order('delete_time desc')\n\t\t\t->select();\n\n\t\t$recycleData['members'] = D('Member')->where(['company_id' => $this->_company_id, 'type' => 1])->field('member_id,name')->fetchAll();\n\n\t\t$recycleData['completeDeleteAuth'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/complete_delete', $this->_member['role_id']);\n\n\t\t$recycleData['recoverTicketAuth'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/recover', $this->_member['role_id']);\n\n\t\t$Page->setConfig('prev', \"<i class='iconfont icon-zuo'></i>\");\n\n\t\t$Page->setConfig('next', \"<i class='iconfont icon-you'></i>\");\n\n\t\t$this->assign('page', $Page->show()); //\n\n\t\t$this->assign('recycleData', $recycleData);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 获取get查询条件\n\t * @param string $source 来源\n\t * @param array $defaultTemplateIds 默认为传入的模板ID数组\n\t * @return array\n\t */\n\tprivate function getField($source = '', $defaultTemplateIds = [])\n\t{\n\t\t$where = array();\n\n\t\t$filter = [\n\t\t\t'keyword' => isset($_GET['keyword']) && $_GET['keyword'] ? I('get.keyword') : '',\n\t\t\t'ticket_from' => I('get.ticket_from', []),\n\t\t\t'priority' => I('get.priority', []),\n\t\t\t'statusIds' => I('get.status') ? explode(',', I('get.status')) : [],\n\t\t\t'templateTypeIds' => I('get.template_type_id') ? explode(',', I('get.template_type_id')) : (!empty($defaultTemplateIds) ? $defaultTemplateIds : []), // 如果传入了模板ID数组则使用\n\t\t\t'template_id' => I('get.template_id', 0),\n\t\t\t'publishIds' => I('get.publishIds') ? explode(',', I('get.publishIds')) : [],\n\t\t\t'groupIds' => I('get.groupIds', []),\n\t\t\t'handleIds' => I('get.handleIds', []),\n\t\t\t'timeId' => I('get.timeId', -1),\n\t\t\t'datetime' => isset($_GET['datetime']) && $_GET['datetime'] ? explode('~', urldecode($_GET['datetime'])) : []\n\t\t];\n\n\t\tif ($filter['keyword']) {\n\t\t\t//            发布人姓名和邮箱，手机号作为筛选条件\n\t\t\tif (isEmail($filter['keyword']) || (strlen($filter['keyword']) == 11 && isMobile($filter['keyword']))) {\n\t\t\t\t$where['member_id'] = M('member')->where(['company_id' => $this->_company_id, 'mobile|email|account' => $filter['keyword']])->getField('member_id');\n\t\t\t} else {\n\t\t\t\t$memberIds = M('member')->where(['company_id' => $this->_company_id, 'name' => $filter['keyword']])->field('member_id')->select();\n\n\t\t\t\tif ($memberIds) {\n\t\t\t\t\t$memberIds = array_column($memberIds, 'member_id');\n\n\t\t\t\t\t$where['member_id'] = ['in', $memberIds];\n\t\t\t\t} else {\n\t\t\t\t\t$where['ticket_no|title|related_name'] = ['LIKE', '%' . $filter['keyword'] . '%'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\t    来源\n\t\tif ($filter['ticket_from']) {\n\t\t\t$where['ticket_from'] = ['in', $filter['ticket_from']];\n\t\t}\n\n\t\t//\t    优先级\n\t\tif ($filter['priority']) {\n\t\t\t$where['priority'] = ['in', $filter['priority']];\n\t\t}\n\n\t\t//\t    状态\n\t\tif ($filter['statusIds']) {\n\t\t\t$where['status_id'] = ['in', $filter['statusIds']];\n\t\t}\n\n\t\t//\t    模板类型\n\t\tif ($filter['templateTypeIds']) {\n\t\t\t$where['type_id'] = ['in', $filter['templateTypeIds']];\n\t\t}\n\n\t\t//\t    模板\n\t\tif ($filter['template_id']) {\n\t\t\t$where['ticket_model_id'] = ['in', $filter['template_id']];\n\n\t\t\t$ticket_form = M('ticket_form')->where(['ticket_model_id' => $filter['template_id'], 'closed' => 0])\n\t\t\t\t->field('ticket_form_id as id,ticket_form_description as name,orderby')\n\t\t\t\t->order('orderby asc')->select();\n\n\t\t\t$this->assign('ticketForm', $ticket_form);\n\t\t}\n\n\t\t//\t    发布人\n\t\tif ($filter['publishIds']) {\n\t\t\t$where['member_id'] = ['in', $filter['publishIds']];\n\t\t}\n\n\t\t//\t    处理人\n\t\tif ($filter['handleIds']) {\n\t\t\t$where['dispose_id'] = ['in', $filter['handleIds']];\n\t\t}\n\n\t\tif ($filter['datetime']) {\n\t\t\t$where['create_time'] = [['egt', strtotime(trim($filter['datetime'][0]))], ['elt', strtotime(trim($filter['datetime'][1]))]];\n\n\t\t\t$this->assign('datetime', urldecode($_GET['datetime']));\n\t\t} else {\n\t\t\tif ($source !== 'export' && $filter['timeId'] == -1) {\n\t\t\t\t$create_time = D('Ticket')->getStartTime(365);\n\n\t\t\t\t$filter['timeId'] = 30;\n\t\t\t} else {\n\t\t\t\t$start_time = D('Ticket')->getStartTime($filter['timeId']);\n\n\t\t\t\t$create_time = $start_time ? $start_time : D('Ticket')->getStartTime(365);\n\t\t\t}\n\n\t\t\t$where['create_time'] = [['egt', $create_time], ['elt', time()]];\n\t\t}\n\n\t\t$where['sort'] = isset($_GET['sort']) && $_GET['sort'] ? I('get.sort') : 'desc';\n\n\t\t$where['order'] = isset($_GET['sort_field']) && $_GET['sort_field'] ? I('get.sort_field') : 'ticket_id';\n\n\t\t$where['company_id'] = $this->_company_id;\n\n\t\t$where['audit_status'] = ['in', '1,3'];\n\n\t\t$where['delete'] = 2;\n\n\t\t$this->assign('filter', $filter);\n\n\t\t$this->assign('sort', $where['sort']);\n\n\t\t$this->assign('sort_field', $where['order']);\n\n\t\t$this->assign('end_status', self::$end_status);\n\n\t\t$this->assign('filterData', json_encode($filter));\n\n\t\tsession('TicketExportWhere', $where);\n\n\t\treturn $where;\n\t}\n\n\n\t/*\n\t * 获取工单列表\n\t * @param array $field 条件字段\n\t * @return array\n\t */\n\tpublic function getTicketList($source = '', $where = [], $field = '*', $action = '')\n\t{\n\t\t$list = [];\n\t\t$order = '';\n\n\t\t$cookie_view_source = cookie('ticket_view_source_' . $this->_company_id . '_' . $this->member_id);\n\n\t\t$view_source = isset($_GET['view_source']) && $_GET['view_source'] ? I('get.view_source') : ($cookie_view_source ? $cookie_view_source : 'list');\n\n\t\t$show_end_ticket = cookie('show_end_ticket_' . $this->_company_id . '_' . $this->member_id);\n\n\t\t$show_end_ticket = $show_end_ticket ? $show_end_ticket : 'show';\n\n\t\tif (!in_array($view_source, ['minimalist', 'list'])) {\n\t\t\t$view_source = 'minimalist';\n\t\t}\n\n\t\t$template_map = ['company_id' => $this->_company_id];\n\n\n\t\tif ($where) {\n\t\t\tif (isset($where['type_id']) && $where['type_id']) {\n\t\t\t\t$template_map['type_id'] = $where['type_id'];\n\t\t\t}\n\n\t\t\tif (isset($where['order']) && $where['order']) {\n\t\t\t\tif (is_array($where['order'])) {\n\t\t\t\t\tforeach ($where['order'] as $v)\n\t\t\t\t\t\t$order .= $v . \" \" . $where['sort'] . \",\";\n\n\t\t\t\t\t$order = rtrim($order, ',');\n\t\t\t\t} else {\n\t\t\t\t\t$order = $where['order'] . \" \" . $where['sort'];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$order = \"ticket_id \" . $where['sort'];\n\t\t\t}\n\n\t\t\tunset($where['order'], $where['sort']);\n\n\t\t\tif ($show_end_ticket != 'show' && (!isset($where['status_id']) || !$where['status_id'])) {\n\t\t\t\t$where['status_id'] = ['neq', self::$end_status['status_id']];\n\t\t\t}\n\t\t\t// 特殊条件：排除 member_id 为 2 且 ticket_form_id 为 24 且 ticket_form_content 为 '南京' 的工单\n\t\t\tif ($this->member_id == 16 || $this->member_id == 17) {\n\t\t\t\t$exclude_tickets = M('ticket_detail')\n\t\t\t\t\t->where(['ticket_form_id' => 24, 'ticket_form_content' => '南京'])\n\t\t\t\t\t->getField('ticket_id', true);\n\n\t\t\t\tif ($exclude_tickets) {\n\t\t\t\t\t$where['ticket_id'] = ['not in', $exclude_tickets];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($this->member_id == 26) {\n\t\t\t\t// 定义需要包含的工单状态数组\n\t\t\t\t$allowed_status_ids = [9, 4, 5, 6];\n\n\t\t\t\t// 设置查询条件仅包含特定状态的工单\n\t\t\t\t$where['status_id'] = ['in', $allowed_status_ids];\n\t\t\t}\n\n\n\t\t\tif ($source == 'export') {\n\t\t\t\tif ($action == 'waitReplyTicket') {\n\t\t\t\t\t$field = $field === '*' ? 'ticket_id,title,member_id,ticket_no,look,create_time,end_time,recipient_id,dispose_id,status_id,ticket_from,priority' : $field;\n\n\t\t\t\t\t$param = [\n\t\t\t\t\t\t'company_id' => $this->_company_id,\n\t\t\t\t\t\t'member_id' => $this->member_id,\n\t\t\t\t\t\t'field' => $field\n\t\t\t\t\t];\n\n\t\t\t\t\t$result = D('Ticket')->getWaitReplyTicketData($param, $where);\n\n\t\t\t\t\t$list = fetchAll($result['tickets'], 'ticket_id');\n\t\t\t\t} else {\n\t\t\t\t\t$list = D('Ticket')->where($where)->order($order)->field($field)->fetchAll();\n\t\t\t\t}\n\n\t\t\t\treturn $list;\n\t\t\t} else {\n\t\t\t\t//                设置默认工单显示方式\n\t\t\t\tD('Ticket')->updateSourceView($view_source, $this->member_id);\n\n\t\t\t\tif ($action == 'waitReplyTicket') {\n\t\t\t\t\t$param = [\n\t\t\t\t\t\t'company_id' => $this->_company_id,\n\t\t\t\t\t\t'member_id' => $this->member_id,\n\t\t\t\t\t\t'field' => 'ticket_id,title,member_id,ticket_no,look,create_time,recipient_id,dispose_id,status_id,ticket_from,priority'\n\t\t\t\t\t];\n\n\t\t\t\t\t$param['page'] = 1;\n\n\t\t\t\t\t$result = D('Ticket')->getWaitReplyTicketData($param, $where);\n\n\t\t\t\t\t$list = $result['tickets'];\n\n\t\t\t\t\t$this->assign('page', $result['page']); //赋值分页输出\n\n\t\t\t\t\tsession('TicketExportWhere', $result['exportWhere']);\n\t\t\t\t} else {\n\t\t\t\t\t$count = D('Ticket')->where($where)->count('ticket_id');\n\n\t\t\t\t\t$Page = new \\Think\\Page($count, 100);\n\n\t\t\t\t\t$field = 'ticket_id,title,ticket_from,ticket_no,priority,member_id,recipient_id,dispose_id,type_id,ticket_model_id,status_id,create_time\n\t                    ,end_time,look';\n\n\t\t\t\t\t$list = D('Ticket')->where($where)->limit($Page->firstRow, $Page->listRows)->order($order)->field($field)->fetchAll();\n\n\t\t\t\t\t$Page->setConfig('prev', \"<i class='iconfont icon-zuo'></i>\");\n\n\t\t\t\t\t$Page->setConfig('next', \"<i class='iconfont icon-you'></i>\");\n\n\t\t\t\t\t$this->assign('page', $Page->show()); //赋值分页输出\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsession('getNewTicketWhere', $where);\n\n\t\t\t//\t         我关注的工单\n\t\t\t$follow = M('ticket_follow')->where(['company_id' => $this->_company_id, 'member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t\t$followTicket = $follow ? array_column($follow, 'ticket_id') : [];\n\n\t\t\tforeach ($list as $k => &$v) {\n\t\t\t\t//                最新回复数\n\t\t\t\t$where = ['ticket_id' => $v['ticket_id'], 'look' => 1, 'member_id' => ['neq', $this->member_id]];\n\n\t\t\t\t$v['newReplyNum'] = D('TicketReply')->where($where)->count('reply_id');\n\n\t\t\t\t//                结束状态\n\t\t\t\t$v['end_status_id'] = self::$end_status['status_id'];\n\n\t\t\t\t//\t              获取工单耗时\n\t\t\t\t$takeTime = D('Ticket')->getTicketTakeTime($this->_company_id, $v['ticket_id'], $v['create_time'], $v['end_time']);\n\n\t\t\t\t//\t              已耗时\n\t\t\t\t$v['taking'] = $takeTime['taking'];\n\n\t\t\t\t//\t              总耗时\n\t\t\t\t$v['ztaking'] = $takeTime['ztaking'];\n\n\t\t\t\t//                是否挂起\n\t\t\t\t$suspendWhere = ['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id'], 'start_time' => ['gt', 0], 'close_time' => 0];\n\n\t\t\t\t$v['is_suspend'] = M('ticket_suspend')->where($suspendWhere)->getField('id');\n\n\t\t\t\tif (in_array($v['ticket_id'], $followTicket)) {\n\t\t\t\t\t$v['is_follow'] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\t\t  模板\n\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t//        模板类型\n\t\t$templateTypeName = D('TemplateType')->getNameByLang('type_name');\n\n\t\t$condition = ['company_id' => $this->_company_id];\n\n\t\t//        完成期限\n\t\t$deadlines = M('ticket_deadlines')->where(['company_id' => $this->_company_id])->select();\n\n\t\t$deadTimes = [];\n\n\t\tforeach ($deadlines as $d) {\n\t\t\t$deadTimes[$d['ticket_id']] = $d;\n\t\t}\n\n\t\t$group = D('Group')->where(['company_id' => $this->_company_id, 'closed' => 0, 'ticket_auth' => 10])\n\t\t\t->field('group_id,group_name,parent_id')\n\t\t\t->order('orderby asc')->select();\n\n\t\t$members = D('Member')->where(['company_id' => $this->_company_id])\n\t\t\t->field('name,member_id,face,type,group_id')\n\t\t\t->fetchAll();\n\n\t\t//        权限 - 导入工单\n\t\t$auth['import'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/import', $this->_member['role_id']);\n\n\t\t//        权限 - 导出工单\n\t\t$auth['export'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/export', $this->_member['role_id']);\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t//        权限 - 关注工单\n\t\t$auth['follow'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/follow', $this->_member['role_id']);\n\n\t\t//        模板类型\n\t\t$template_type = D('TemplateType')->where($condition)->field(\"type_id,{$templateTypeName}\")->fetchAll();\n\n\t\t//\t      工单模板\n\t\t$template = D('Ticketmodel')->where($template_map)->field(\"ticket_model_id,{$templateName}\")->fetchAll();\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('groups', fetchAll($group, 'group_id'));\n\n\t\t$department = getSubjectTree($group, 'group_id', 'parent_id', 'children', 0);\n\n\t\t$this->assign('jsonDepartmentData', json_encode($department));\n\n\t\t$this->assign('members', $members);\n\n\t\t$this->assign('deadTimes', $deadTimes);\n\n\t\t$this->assign('view_source', $view_source);\n\n\t\t$this->assign('show_end_ticket', $show_end_ticket);\n\n\t\t$this->assign('source', 'ticket');\n\n\t\t$this->assign('exportList', C('EXPORT'));\n\n\t\t$this->assign('ticketView', D('TicketView')->getTicketView($this->_company_id));\n\n\t\t$this->assign('templateType', $template_type);\n\n\t\t$this->assign('template', $template);\n\n\t\t$this->assign('ticket_status', self::$ticket_status);\n\n\t\t$this->assign('createTimeFilter', D('Ticket')->getCreateTime());\n\n\t\t$this->assign('ticketFromFilter', D('Ticket')->getTicketFrom());\n\n\t\t$this->assign('priorityFilter', D('Ticket')->getPriority());\n\n\t\t$this->assign('ticketStatusData', json_encode(array_values(self::$ticket_status)));\n\n\t\t$this->assign('templateTypeFilter', json_encode(array_values($template_type)));\n\n\t\t$this->assign('memberData', json_encode(array_values($members)));\n\n\t\treturn $list;\n\t}\n\n\n\t/*\n\t * 创建工单\n\t * @param string $id         模板ID\n\t * @param string $request    请求类型\n\t */\n\tpublic function create($id = '', $request = '')\n\t{\n\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => decrypt($id, 'modelID'), 'closed' => 0];\n\n\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\tif ($request == 'area') {\n\t\t\t\t$data = D('Ticket')->getAreaData();\n\t\t\t} else {\n\t\t\t\t$data = D('Ticket')->CreateTicketByUser($this->_company_id, $this->member_id, $template, self::$first_status['status_id'], 'PC');\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$createTicketFormData = D('Ticket')->getCreateTicketForm($template, $where, $this->_company);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('createTicketFormData', $createTicketFormData);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 修改工单\n\t * @param string $id         工单ID\n\t */\n\tpublic function edit($id = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\t$data = D('Ticket')->EditTicketByUser($this->_company_id, $this->member_id, $ticket);\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket['ticket_model_id'], 'closed' => 0];\n\n\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t}\n\n\t\t\t$editTicket = D('Ticket')->getEditTicketForm($ticket, $template, $this->_company);\n\n\t\t\t$ticket = $editTicket['ticket'];\n\n\t\t\t$editTicketFormData = $editTicket['editTicketFormData'];\n\n\t\t\t$this->assign('editTicketFormData', $editTicketFormData);\n\n\t\t\t$this->assign('ticket_model_id', $ticket['ticket_model_id']);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('ticket', $ticket);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 克隆工单\n\t * @param string $id                 工单ID\n\t * @param string $ticket_model_id    模板ID\n\t * @param string $request            请求类型\n\t */\n\tpublic function cloning($id = '', $ticket_model_id = '', $request = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\tif ($request == 'area') {\n\t\t\t\t$data = D('Ticket')->getAreaData();\n\t\t\t} else {\n\t\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket_model_id, 'closed' => 0];\n\n\t\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t\t}\n\n\t\t\t\t$data = D('Ticket')->CreateTicketByUser($this->_company_id, $this->member_id, $template, self::$first_status['status_id'], 'PC');\n\n\t\t\t\t$data['url'] = U('detail', ['id' => $data['id']]);\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket['ticket_model_id'], 'closed' => 0];\n\n\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t}\n\n\t\t\t$cloneTicket = D('Ticket')->getEditTicketForm($ticket, $template, $this->_company);\n\n\t\t\t$ticket = $cloneTicket['ticket'];\n\n\t\t\t$cloneTicketFormData = $cloneTicket['editTicketFormData'];\n\n\t\t\t$this->assign('cloneTicketFormData', $cloneTicketFormData);\n\n\t\t\t$this->assign('ticket_model_id', $ticket['ticket_model_id']);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('ticket', $ticket);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 工单详情\n\t * @param string $id                 工单ID\n\t * @param string $request            请求类型\n\t * @param string $reply_tab          tab类型 ticket_reply,team_reply,ticket_event\n\t */\n\tpublic function detail($id = 0, $request = '', $reply_tab = 'ticket_reply')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field = $look = $reply = $member = [];\n\n\t\t//        查询工单信息\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\t$ticket['end_status_id'] = self::$end_status['status_id'];\n\n\t\t$ticket['first_status_id'] = self::$first_status['status_id'];\n\n\t\tif (IS_POST)\n\t\t\t$this->ajaxReturn(D('Ticket')->ajaxRequestByDetail($this->_company_id, $this->member_id, $ticket, $request));\n\n\t//\t$detailData = D('Ticket')->getTicketDetailData($ticket, $this->_company_id, $this->_member, self::$ticket_status, 'pcTerminal');\n//     // 计算图片数量\n//     $photo_count = !empty($ticket['photo']) ? count($ticket['photo']) : 0;\n\n// $excluded_status_ids = [9, 4, 5, 6];\n//     // 过滤 handlerTicketStatus\n//     if ($photo_count < 2) {\n//         foreach ($detailData['handlerTicketStatus'] as $key => $status) {\n//             if (in_array($status['status_id'], $excluded_status_ids)) {\n//                 unset($detailData['handlerTicketStatus'][$key]);\n//             }\n//         }\n\n//         foreach ($detailData['publisherTicketStatus'] as $key => $status) {\n//             if (in_array($status['status_id'], $excluded_status_ids)) {\n//                 unset($detailData['publisherTicketStatus'][$key]);\n//             }\n//         }\n//     }\n\n//     // 重新索引数组\n//     $detailData['handlerTicketStatus'] = array_values($detailData['handlerTicketStatus']);\n//     $detailData['publisherTicketStatus'] = array_values($detailData['publisherTicketStatus']);\n\n\n\n\n\t\t$this->assign('ticket', $ticket);\n\n\t\t$this->assign('detailData', $detailData);\n\n\t\t$this->assign('nowTime', date('Y-m-d', time()));\n\n\t\t$this->assign('yesTime', date('Y-m-d', strtotime('-1 day')));\n\n\t\t$this->assign('reply_tab', $reply_tab);\n\n\t\t$this->display();\n\t}\n\n\n\tpublic function reply()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$result = D('Ticket')->ticketReplyByUser($this->_company_id, $this->member_id, self::$end_status['status_id']);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\n\n\tpublic function teamReply()\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$result = D('Ticket')->insideReplyByUser($this->_company_id, $this->member_id, self::$end_status['status_id']);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\tpublic function satisfy($id = null)\n\t{\n\t\t$ticket = M('Ticket')->where(['ticket_id' => decrypt($id, 'TICKET')])->field('company_id,ticket_id,dispose_id')->find();\n\n\t\tif (!$ticket)\n\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('TICKET_NOT')]);\n\n\t\tif (IS_POST)\n\t\t\t$this->ajaxReturn(D('TicketSatisfy')->CreateSatisfy($ticket));\n\t}\n\n\n\tpublic function config()\n\t{\n\t\t$config = M('ticket_config')->where(['company_id' => $this->_company_id])->find();\n\n\t\tif (IS_POST) {\n\t\t\t$configData = I('post.config');\n\n\t\t\tif (isset($configData['timeout']) && !isInteger($configData['timeout']))\n\t\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('TIME_OUT_NOTE')]);\n\n\t\t\t$data = [\n\t\t\t\t'handler_closed' => $configData['handler'] == 'on' ? 10 : 20,\n\t\t\t\t'publisher_closed' => $configData['publisher'] == 'on' ? 10 : 20,\n\t\t\t\t'feedback' => $configData['msg_feedback'] ?? 20,\n\t\t\t\t'end_operate' => $configData['end_ticket'],\n\t\t\t\t'status_go_back' => $configData['status_go_back'],\n\t\t\t\t'handler_go_back' => $configData['handler_go_back'] == 'on' ? 10 : 20,\n\t\t\t\t'publisher_go_back' => $configData['publisher_go_back'] == 'on' ? 10 : 20,\n\t\t\t\t'overtime' => $configData['timeout'],\n\t\t\t];\n\n\t\t\tif ($configData['status_go_back'] == 10 && $data['handler_go_back'] == 20 && $data['publisher_go_back'] == 20) {\n\t\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('SELECT_GO_BACK_ROLE')]);\n\t\t\t}\n\n\t\t\tif ($config) {\n\t\t\t\t$data['id'] = $config['id'];\n\n\t\t\t\t$result = M('ticket_config')->save($data);\n\t\t\t} else {\n\t\t\t\t$data['company_id'] = $this->_company_id;\n\n\t\t\t\t$result = M('ticket_config')->add($data);\n\t\t\t}\n\n\t\t\tif ($result === false) {\n\t\t\t\t$data = ['status' => 0, 'msg' => L('UPDATE_FAILED')];\n\t\t\t} else {\n\t\t\t\t$data = ['status' => 2, 'msg' => L('UPDATE_SUCCESS'), 'url' => U('config')];\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t}\n\n\t\t$this->assign('config', $config);\n\n\t\t$this->display();\n\t}\n\n\n\tpublic function urgeTicket()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$result = D('Ticket')->urgeTicket($this->_company_id, $this->member_id);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->empty();\n\t\t}\n\t}\n\n\n\tpublic function commentReply()\n\t{\n\t\t$result = D('Ticket')->commentReply($this->_company_id, $this->member_id);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\tprotected function getMemberByGroupId($group_id = 0)\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'closed' => 0, 'type' => 1, \"find_in_set('{$group_id}',group_id)\"];\n\n\t\t$task = D('Member')->where($where)->field('member_id,name')->fetchAll();\n\n\t\t$json = [];\n\n\t\tforeach ($task as $k => $v) {\n\t\t\t$json[] = $v;\n\t\t}\n\n\t\treturn $json;\n\t}\n\n\n\t//    关注工单\n\tpublic function follow($request = '')\n\t{\n\t\t$ids = I('post.ticket_ids');\n\n\t\t$result = D('Ticket')->followTicket($this->_company_id, $this->member_id, $ids, $request);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    删除工单\n\tpublic function delete()\n\t{\n\t\t$ids = I('post.ticket_ids');\n\n\t\t$where['company_id'] = $this->_company_id;\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\tif ($v !== 'on') {\n\t\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$where['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$result = M('ticket')->where($where)->setField(['delete' => 1, 'delete_member_id' => $this->member_id, 'delete_time' => NOW_TIME, 'delete_ip' => get_client_ip()]);\n\n\t\t\tforeach ($ticket_ids as $v) {\n\t\t\t\t//                存储工单事件\n\t\t\t\t$eventData = ['event_type' => 'delete', 'ticket_id' => $v, 'member_id' => $this->member_id];\n\n\t\t\t\tD('TicketEvent')->saveEvent($eventData);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$result = ['status' => 2, 'msg' => L('DELETE_SUCCESS'), 'isReload' => 1];\n\t\t\t} else {\n\t\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    完全删除工单\n\tpublic function complete_delete()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$ids = I('post.ticket_ids');\n\t\t} else {\n\t\t\t$ids = explode(',', I('get.ticket_ids'));\n\t\t}\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$result = [];\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\tif ($v !== 'on') {\n\t\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$field['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$tickets = D('Ticket')->where($field)->field('ticket_id')->select();\n\n\t\t\tforeach ($tickets as $v) {\n\t\t\t\t$result = D('Ticket')->deleteTicket($this->_company_id, $v['ticket_id']);\n\n\t\t\t\t$result['url'] = 'recycle';\n\n\t\t\t\tif (!$result['status']) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    恢复工单\n\tpublic function recover()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$ids = I('post.ticket_ids');\n\t\t} else {\n\t\t\t$ids = explode(',', I('get.ticket_ids'));\n\t\t}\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t}\n\n\t\t\t$field['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$result = D('Ticket')->where($field)->setField(['delete' => 2]);\n\n\t\t\tforeach ($ticket_ids as $v) {\n\t\t\t\t//                存储工单事件\n\t\t\t\t$eventData = ['event_type' => 'recover', 'ticket_id' => $v, 'member_id' => $this->member_id];\n\n\t\t\t\tD('TicketEvent')->saveEvent($eventData);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$result = ['status' => 2, 'msg' => L('UPDATE_SUCCESS'), 'isReload' => 1];\n\t\t\t} else {\n\t\t\t\t$result = ['status' => 0, 'msg' => L('UPDATE_FAILED')];\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('RECOVER_TICKET_NOTE')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//\t  服务报告\n\tpublic function service_report($id = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$ticket = M('ticket')->where(['ticket_id' => $ticket_id])->find();\n\n\t\tif (!$ticket) {\n\t\t\t$this->error(L('DATA_NOT_EXIST'));\n\t\t}\n\n\t\t//        发布人\n\t\t$publish = M('member')->where(['member_id' => $ticket['member_id']])->getField('name');\n\n\t\t//        处理人\n\t\t$handler = M('member')->where(['member_id' => $ticket['dispose_id']])->getField('name');\n\n\t\t//        工单状态\n\t\t$statusName = D('TicketStatus')->getNameByLang('status_name');\n\n\t\t$status_name = M('ticket_status')->where(['status_id' => $ticket['status_id']])->getField($statusName);\n\n\t\t//        优先级\n\t\t$priority = D('Ticket')->getPriority($ticket['priority']);\n\n\t\t//\t      计算工单耗时\n\t\t$takeTime = D('Ticket')->getTicketTakeTime($this->_company_id, $ticket['ticket_id'], $ticket['create_time'], $ticket['end_time']);\n\n\t\t$take_time = $ticket['end_time'] ? $takeTime['ztaking'] : $takeTime['taking']; //总耗时\n\n\t\tif ($take_time['day'])\n\t\t\t$ticket['take_time'] .= $take_time['day'] . L('DAYS');\n\n\t\tif ($take_time['hour'])\n\t\t\t$ticket['take_time'] .= $take_time['hour'] . L('HOURS');\n\n\t\tif ($take_time['min'])\n\t\t\t$ticket['take_time'] .= $take_time['min'] . L('MINUTES');\n\n\t\t//        计算是否超时\n\t\t$deadtime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $ticket['ticket_id']])->getField('deadtime');\n\n\t\t//\t\t组件\n\t\tif ($deadtime > 0) {\n\t\t\t//\t\t\t完成期限\n\t\t\t$ticket['deadtime'] = getDates($deadtime);\n\n\t\t\t//\t\t\t是否超时\n\t\t\t$ticket['is_timeout'] = checkTicketIsTimeout($ticket['deadtime'], $ticket['end_time']);\n\n\t\t\t//\t\t\t超时时长\n\t\t\t$ticket['timeout'] = checkTicketIsTimeout($ticket['deadtime'], $ticket['end_time'], 1);\n\t\t}\n\t\t//\t\t全局\n\t\telse {\n\t\t\t//\t\t\t全局完成期限\n\t\t\t$overtime = M('ticket_config')->where(['company_id' => $this->_company_id])->getField('overtime');\n\n\t\t\t$ticket['deadtime'] = getDates(intval($ticket['create_time'] + $overtime * 3600));\n\n\t\t\t//\t\t\t是否超时\n\t\t\t$ticket['is_timeout'] = checkIsTimeout($ticket['ticket_id'], $ticket['create_time'], $ticket['end_time']);\n\n\t\t\t//\t\t\t超时时长\n\t\t\t$ticket['timeout'] = checkIsTimeout($ticket['ticket_id'], $ticket['create_time'], $ticket['end_time'], 1);\n\t\t}\n\n\n\t\t//        表单详情\n\t\t$ticketForm = M('ticket_form')->alias('a')\n\t\t\t->join('feel_ticket_detail as b on a.ticket_form_id = b.ticket_form_id')\n\t\t\t->where(['ticket_id' => $ticket_id, 'a.company_id' => $ticket['company_id']])\n\t\t\t->field('a.ticket_form_id,ticket_form_description,ticket_form_type,ticket_form_content')\n\t\t\t->order('orderby asc')\n\t\t\t->select();\n\n\t\t$ticketFormHtml = '';\n\n\t\tforeach ($ticketForm as $k1 => $tf) {\n\t\t\tif ($tf['ticket_form_type'] != 'textarea') {\n\t\t\t\t$ticketFormHtml .= \"<li>\n\t\t\t\t<div class='item-div1'>{$tf['ticket_form_description']}</div>\n\t\t\t\t<div class='item-div2'>\" . getHtml($tf['ticket_form_content']) . \"</div>\n\t\t\t\t</li>\";\n\t\t\t} else {\n\t\t\t\t$ticketFormHtml .= \"<li class='textarea-form'>\n\t\t            <div class='ticket-form-title'>{$tf['ticket_form_description']}</div>\n\t\t            <div class='ticket-form-content'>\" . getHtml($tf['ticket_form_content']) . \"</div>\n\t\t            </li>\";\n\t\t\t}\n\t\t}\n\n\t\t//        通过邮件发送的工单内容\n\t\tif ($ticket['ticket_from'] == 'Email' && $ticket['content']) {\n\t\t\t$ticketFormHtml .= \"<li class='textarea-form'>\n                <div class='ticket-form-title'>\" . L('TICKET_CONTENT') . \"</div>\n                <div class='ticket-form-content'>\" . getHtml($ticket['content']) . \"</div>\n                </li>\";\n\t\t}\n\n\t\t//\t      发布工单的附件\n\t\t$createFiles = M('upload_file')->where(['ticket_id' => $ticket_id, 'file_form' => 'ticket'])->select();\n\n\t\t$createAttachItems = '';\n\n\t\tforeach ($createFiles as $ct) {\n\t\t\t$createAttachItems .= \"<div class='attach-item'><a href='{$ct['file_link']}'>{$ct['file_name']}</a><span>（\" . getFileSize($ct['file_size']) . \"）</span></div>\";\n\t\t}\n\n\t\tif ($createAttachItems) {\n\t\t\t$ticketFormHtml .= \"<li class='textarea-form'><div class='ticket-form-title'>\" . L('ATTACHMENT') . \"</div><div class='ticket-form-content create-attach'>{$createAttachItems}</div></li>\";\n\t\t}\n\n\t\t//        工单图片\n\t\tif ($ticket['photo']) {\n\t\t\t$img = 1;\n\n\t\t\t$photo = unserialize($ticket['photo']);\n\n\t\t\t$ticketFormHtml .= \"<li class='ticket-image clearfix'>\";\n\n\t\t\tforeach ($photo as $tp) {\n\t\t\t\t$mr = '';\n\n\t\t\t\tif (judgeParity($img) == 2)\n\t\t\t\t\t$mr = 'mr0';\n\n\t\t\t\t$ticketFormHtml .= \"<div class='upload-img {$mr}'><img src='{$tp}' alt='' style='margin-right:15px'></div>\";\n\n\t\t\t\t$img++;\n\t\t\t}\n\n\t\t\t$ticketFormHtml .= \"</li>\";\n\t\t}\n\n\t\t//\t\t  PDF模板\n\t\t$pdfTemplate = C('PDF_TEMP')['template'];\n\n\t\t//\t\t  详情模板\n\t\t$detailTemplate = C('PDF_TEMP')['detail'];\n\n\t\t$detailKeySearch = [\n\t\t\t'{{title}}',\n\t\t\t'{{status}}',\n\t\t\t'{{priority}}',\n\t\t\t'{{publish}}',\n\t\t\t'{{handler}}',\n\t\t\t'{{create_time}}',\n\t\t\t'{{dispose_time}}',\n\t\t\t'{{end_time}}',\n\t\t\t'{{take_time}}',\n\t\t\t'{{deadtime}}',\n\t\t\t'{{is_timeout}}',\n\t\t\t'{{timeout}}'\n\t\t];\n\n\t\t$detailKeyReplace = [\n\t\t\tL('TICKET_TITLE'),\n\t\t\tL('TICKET_STATUS'),\n\t\t\tL('PRIORITY'),\n\t\t\tL('PUBLISHER'),\n\t\t\tL('HANDLER'),\n\t\t\tL('RELEASE_TIME'),\n\t\t\tL('PROCESS_TIME'),\n\t\t\tL('COMPLETION_TIME'),\n\t\t\tL('TIME_CONSUMING'),\n\t\t\tL('DEADLINES_COMPONENTS'),\n\t\t\tL('WHETHER_TIMEOUT'),\n\t\t\tL('TIMEOUT'),\n\t\t];\n\n\t\t$detailValueSearch = [\n\t\t\t'{{ticket.title}}',\n\t\t\t'{{ticket.status}}',\n\t\t\t'{{ticket.priority}}',\n\t\t\t'{{ticket.publish}}',\n\t\t\t'{{ticket.handler}}',\n\t\t\t'{{ticket.create_time}}',\n\t\t\t'{{ticket.dispose_time}}',\n\t\t\t'{{ticket.end_time}}',\n\t\t\t'{{ticket.take_time}}',\n\t\t\t'{{ticket.deadtime}}',\n\t\t\t'{{ticket.is_timeout}}',\n\t\t\t'{{ticket.timeout}}',\n\t\t\t'{{ticket.ticket_form}}'\n\t\t];\n\n\t\t$detailValueReplace = [\n\t\t\t$ticket['title'],\n\t\t\t$status_name,\n\t\t\t$priority,\n\t\t\t$publish,\n\t\t\t$handler ? $handler : 'none',\n\t\t\tgetDates($ticket['create_time']),\n\t\t\t$ticket['dispose_time'] ? getDates($ticket['dispose_time']) : 'none',\n\t\t\t$ticket['end_time'] ? getDates($ticket['end_time']) : 'none',\n\t\t\t$ticket['take_time'],\n\t\t\t$ticket['deadtime'],\n\t\t\t$ticket['is_timeout'],\n\t\t\t$ticket['timeout'],\n\t\t\t$ticketFormHtml\n\t\t];\n\n\t\t$detailTemplate = str_replace($detailKeySearch, $detailKeyReplace, $detailTemplate);\n\n\t\t$detailTemplate = str_replace($detailValueSearch, $detailValueReplace, $detailTemplate);\n\n\t\t//\t\t工单回复\n\t\t$reply = D(\"TicketReply\")\n\t\t\t->alias('a')\n\t\t\t->join('feel_member AS b ON a.member_id = b.member_id', 'left')\n\t\t\t->where([\"ticket_id\" => $ticket_id])\n\t\t\t->field('reply_id,ticket_id,reply_content,reply_time,b.face,b.name')\n\t\t\t->order(\"reply_id asc\")\n\t\t\t->fetchAll();\n\n\t\t$replyContent = '';\n\n\t\tforeach ($reply as &$rv1) {\n\t\t\tif (!$rv1['face'])\n\t\t\t\t$rv1['face'] = C('HTTP_PROTOCOL') . \"://\" . C('HOST_DOMAIN') . \"/Attachs/face/default.jpg\";\n\n\t\t\t$attachments = M('upload_file')->where(['reply_id' => $rv1['reply_id']])->select();\n\n\t\t\t$attachItem = '';\n\n\t\t\tforeach ($attachments as $at) {\n\t\t\t\t$attachItem .= \"<div class='attach-item'><a href='{$at['file_link']}'>{$at['file_name']}</a><span>（\" . getFileSize($at['file_size']) . \"）</span></div>\";\n\t\t\t}\n\n\t\t\t$replyTemplate = C('PDF_TEMP')['reply'];\n\n\t\t\t$replyTemplate = str_replace(\n\t\t\t\t[\"{{face}}\", \"{name}\", \"{{reply_time}}\", \"{{reply_content}}\", \"{{reply_attach}}\"],\n\t\t\t\t[$rv1['face'], $rv1['name'], date('Y-m-d H:i', $rv1['reply_time']), htmlspecialchars_decode($rv1['reply_content']), $attachItem],\n\t\t\t\t$replyTemplate\n\t\t\t);\n\n\t\t\t$replyContent .= $replyTemplate;\n\t\t}\n\n\t\t$stylesheet = file_get_contents('./Public/css/pdf.css');\n\n\t\t$pdfTemplate .= \"<style>{$stylesheet}</style>\";\n\n\t\t$replyContent = \"<div class='feeldesk-reply-content'><div class='reply-title'>\" . L('REPLY_LIST') . \"</div>{$replyContent}</div>\";\n\n\t\tVendor('mpdf.mpdf');\n\n\t\t//\t\t文件名称\n\t\t$filename = \"{$ticket['title']} \" . L('SERVICE_REPORT');\n\n\t\t$pdfTemplate = str_replace(['{{header}}', '{{detail_content}}', '{{reply_content}}'], [$filename, $detailTemplate, $replyContent], $pdfTemplate);\n\n\t\t//\t\t语言 | 纸张格式 | 默认字体大小 | 默认字体 | 左边距 | 右边距 | 上边距 | 下边距\n\t\t$mpdf = new \\mPDF('zh-cn', 'A4', 0, '宋体', 0, 0, 0, 0);\n\n\t\t$mpdf->useAdobeCJK = true;\n\n\t\t//// // echo $pdfTemplate;die;\n\n\t\t//\t\t设置标题\n\t\t$mpdf->SetTitle($filename . \".pdf\");\n\n\t\t//\t\t写入css内容\n\t\t$mpdf->WriteHTML($stylesheet, 1);\n\n\t\t//\t\t写入文件内容\n\t\t$mpdf->WriteHTML($pdfTemplate);\n\n\t\t//\t\t$mpdf->Output($filename,true);\n\n\t\t//\t\t$mpdf->Output($filename,'d');直接下载\n\n\t\t$mpdf->Output($filename . \".pdf\", 'I');\n\n\t\t$mpdf->Output();\n\t}\n\n\n\t//    导入工单\n\tpublic function import()\n\t{\n\t\t$result = D('Ticket')->importTicket($this->_company_id, $this->member_id, self::$first_status['status_id']);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\t//    导出工单\n\tpublic function exportMoney($action = '')\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$export = C('EXPORT');\n\t\t\t$year = I('get.year');  \n\t\t\t$startTimeStamp = strtotime($year . '-01-01 00:00:00');  // 当前年1月1日00:00:00\n\t\t\t$endTimeStamp = strtotime(($year + 1) . '-01-01 00:00:00'); // 下一年1月1日00:00:00\n\t\t\t// echo 'Start Time: ' . date('Y-m-d H:i:s', $startTimeStamp) . '<br>';\n\t\t\t// echo 'End Time: ' . date('Y-m-d H:i:s', $endTimeStamp) . '<br>';\n\t\t\t$startTimeStamp = '1730390405';\n\t\t\t$endTimeStamp = '1735488005';\n\t\t\t$where = array(\n\t\t\t\t'status_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(9, 4, 5, 6),\n\t\t\t\t),\n\t\t\t\t'type_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(5),\n\t\t\t\t),\n\t\t\t\t'ticket_model_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(5),\n\t\t\t\t),\n\t\t\t\t'create_time' => array(\n\t\t\t\t\t0 => array('egt', $startTimeStamp),  // 起始时间\n\t\t\t\t\t1 => array('elt', $endTimeStamp),    // 结束时间\n\t\t\t\t),\n\t\t\t\t'sort' => 'desc',\n\t\t\t\t'order' => 'ticket_id',\n\t\t\t\t'company_id' => 1,\n\t\t\t\t'audit_status' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => '1,3',\n\t\t\t\t),\n\t\t\t\t'delete' => 2,\n\t\t\t);\n\t\t\t// $where = session('TicketExportWhere');\n\t\t\t// echo \"查询条件: \" .  print_r($where); // 这将输出查询条件的值\n\t\t\t$data = I('get.exportList');\n\n\t\t\t$member_id = I('get.id');\n\t\t\t$commissionRates = I('get.commissionRates');  // 获取传来的提成率数据\n\n\t\t\tif (!$data)\n\t\t\t\t$this->ajaxReturn(['msg' => L('SELECT_EXPORT')]);\n\n\t\t\t$exportList = $tableHeader = $letter = $excelData = [];\n\n\n\t\t\t$field = ['ticket_id'];\n\n\t\t\tforeach ($export as $k => $v) {\n\t\t\t\tif (in_array($v['identity'], $data)) {\n\t\t\t\t\t$exportList[$k] = $v['identity'];\n\n\t\t\t\t\tarray_push($field, $v['identity']);\n\n\t\t\t\t\t$tableHeader[] = $v['name'];\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//\t\t\t过滤非ticket数据表字段\n\t\t\t$field = implode(',', array_diff($field, ['timeout', 'timeout_period', 'reply_content']));\n\n\t\t\tif ($member_id > 0) {\n\t\t\t\t$tickets = $this->$action($member_id, 'export', $where, $field);\n\t\t\t} else {\n\t\t\t\t$tickets = $this->$action('export', $where, $field);\n\t\t\t}\n\n\t\t\t//\t\t\t模板自定义表单\n\t\t\tif (isset($data[5]['form'])) {\n\t\t\t\tforeach ($data[5]['form'] as $formField) {\n\t\t\t\t\t$nv = $formField['name'];\n\t\t\t\t\tarray_push($tableHeader, $nv);\n\n\t\t\t\t}\n\n\t\t\t\t// If 'reply_content' is in $data, move it to the end of $tableHeader\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$key = array_search('reply_content', $data);\n\t\t\t\t\tarray_push($tableHeader, $tableHeader[$key]);\n\t\t\t\t\tunset($tableHeader[$key]);\n\t\t\t\t\t$tableHeader = array_values($tableHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//            整合表格数据，列内容\n\t\t\tforeach ($tickets as $k => $v) {\n\t\t\t\tforeach ($v as $k1 => &$v1) {\n\t\t\t\t\tif (!in_array($k1, $exportList) && $k1 != 'ticket_id')\n\t\t\t\t\t\tunset($v[$k1]);\n\t\t\t\t}\n\n\t\t\t\t$excelData[] = $v;\n\t\t\t}\n\n\t\t\t//\t\t\t交集 - 存在发布人、处理人、回复则查询用户表\n\t\t\tif (array_intersect($data, ['member_id', 'dispose_id', 'reply_content'])) {\n\t\t\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\t\t\t} else {\n\t\t\t\t$members = [];\n\t\t\t}\n\n\t\t\t$excelData = $this->feelecYieldToArray($excelData);\n\n\t\t\t$yieldData = [];\n\n\t\t\tforeach ($excelData as $k => $v) {\n\t\t\t\t$yieldData[$k] = $v;\n\n\t\t\t\tif ($v['ticket_from'])\n\t\t\t\t\t$yieldData[$k]['ticket_from'] = D('Ticket')->getTicketFrom($v['ticket_from']);\n\n\t\t\t\tif ($v['status_id'])\n\t\t\t\t\t$yieldData[$k]['status_id'] = D('Ticket')->getFieldInfo('ticket_status', ['status_id' => $v['status_id']], 'status_name', 1);\n\n\t\t\t\tif ($v['ticket_model_id'])\n\t\t\t\t\t$yieldData[$k]['ticket_model_id'] = D('Ticket')->getFieldInfo('ticket_model', ['ticket_model_id' => $v['ticket_model_id']], 'ticket_model_name', 1);\n\n\t\t\t\tif ($v['priority'])\n\t\t\t\t\t$yieldData[$k]['priority'] = D('Ticket')->getPriority($v['priority']);\n\n\t\t\t\tif ($v['member_id'])\n\t\t\t\t\t$yieldData[$k]['member_id'] = $members[$v['member_id']]['name'];\n\n\t\t\t\tif ($v['dispose_id'])\n\t\t\t\t\t$yieldData[$k]['dispose_id'] = $members[$v['dispose_id']]['name'];\n\n\t\t\t\tif ($v['create_time'])\n\t\t\t\t\t$yieldData[$k]['create_time'] = \"\\t\" . getDates($v['create_time']);\n\n\t\t\t\tif ($v['end_time'])\n\t\t\t\t\t$yieldData[$k]['end_time'] = \"\\t\" . getDates($v['end_time']);\n\n\t\t\t\t//\t\t\t\t  是否超时\n\t\t\t\tif (in_array('timeout', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout'] = strip_tags($timeout);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  超时时长\n\t\t\t\tif (true) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\n\t\t\t\t\t$timeout_period = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time'], true);\n\n\n\t\t\t\t\t$yieldData[$k]['timeout_period'] = strip_tags($timeout_period);\n\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  模板自定义表单值\n\t\t\t\tif (isset($data[5]['form'])) {\n\t\t\t\t\tforeach ($data[5]['form'] as $formField) {\n\t\t\t\t\t\t$dv = $formField['id'];\n\t\t\t\t\t\t$content = D('Ticket')->getFieldInfo('ticket_detail', ['ticket_id' => $v['ticket_id'], 'ticket_form_id' => $dv], 'ticket_form_content');\n\n\t\t\t\t\t\t$yieldData[$k][] = \"\\t\" . strip_tags(getHtml($content));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  回复内容\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$replys = M('ticket_reply')\n\t\t\t\t\t\t->where(['ticket_id' => $v['ticket_id'], 'company_id' => $this->_company_id])\n\t\t\t\t\t\t->field('member_id,reply_content,reply_time')\n\t\t\t\t\t\t->order('reply_id asc')\n\t\t\t\t\t\t->select();\n\n\t\t\t\t\t$replys = $this->feelecYieldToArray($replys);\n\n\t\t\t\t\tforeach ($replys as $r) {\n\t\t\t\t\t\t$content = strip_tags(getHtml($r['reply_content']));\n\n\t\t\t\t\t\t$reply_content[] = \"【回复人：{$members[$r['member_id']]['name']}，回复时间：\" . getDates($r['reply_time']) . \"，回复内容：{$content}】\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($reply_content) && $reply_content) {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = str_replace([\"\\r\", \"\\n\"], '', implode(' | ', $reply_content));//去除换行，防止单元格内容换行\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tunset($reply_content, $replys);\n\t\t\t\t}\n\n\t\t\t\tunset($yieldData[$k]['ticket_id']);\n\t\t\t}\n\n\t\t\t$excel = ['header' => $tableHeader, 'excelData' => $yieldData];\n\n\n\t\t\tsession('TicketExcelData', $excel);\n\n\n\t\t\t$journalTypesToSummarize = ['SSCI', 'SCI', 'SCOPUS', 'AHCI', 'EI', 'ESCI', 'CA', 'ES', 'Scopus不检索', '普刊'];\n\n\t\t\t// 初始化汇总数组\n\t\t\t$commissionData = [];\n\n\t\t\t// 初始化汇总数组\n\t\t\t$commissionData = [];\n\n\t\t\t// 第一步：汇总每个发布人在每个月每种期刊类型下的总金额\n\t\t\tforeach ($yieldData as $row) {\n\t\t\t\t$publisher = isset($row['member_id']) ? $row['member_id'] : '未知发布人';\n\t\t\t\t$journalType = isset($row[0]) ? trim($row[0]) : '未知期刊类型';\n\t\t\t\t$fullAmount = isset($row[2]) ? floatval($row[2]) : 0.00;\n\t\t\t\t$location = isset($row[4]) && !empty($row[4]) ? $row[4] : '徐州';\n\t\t\t\t$createTime = isset($row['create_time']) ? $row['create_time'] : '';\n\t\t\t\t$timeout_period = isset($row['timeout_period']) ? $row['timeout_period'] : '';\n\t\t\t\t$status_id = isset($row['status_id']) ? $row['status_id'] : '';\n\n\n\t\t\t\t// 解析超时时长\n\t\t\t\t$timeout_seconds = $this->parseTimeoutPeriod($timeout_period);\n\t\t\t\tif ($timeout_seconds !== false) {\n\t\t\t\t\t$timestamp = strtotime($createTime) + $timeout_seconds;\n\t\t\t\t\t$month = date('Y-m', $timestamp);\n\t\t\t\t} else {\n\t\t\t\t\t// 如果无法解析超时时长，使用创建时间的月份\n\t\t\t\t\t$timestamp = strtotime($createTime);\n\t\t\t\t\tif ($timestamp === false) {\n\t\t\t\t\t\tcontinue; // 无法解析创建时间，跳过\n\t\t\t\t\t}\n\t\t\t\t\t$month = date('Y-m', $timestamp);\n\t\t\t\t}\n\n\t\t\t\t// 跳过未知期刊类型或金额为0的行\n\t\t\t\tif ($journalType === '未知期刊类型' || $fullAmount <= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 仅汇总指定的期刊类型\n\t\t\t\tif (!in_array($journalType, $journalTypesToSummarize)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 检查是否在 $commissionRates 中定义（非 ES 类型）\n\t\t\t\tif ($journalType !== 'ES' && !isset($commissionRates[$journalType])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 初始化发布人、月份的数据结构\n\t\t\t\tif (!isset($commissionData[$publisher])) {\n\t\t\t\t\t$commissionData[$publisher] = [\n\t\t\t\t\t\t'journal_sums' => array_fill_keys($journalTypesToSummarize, 0.00),\n\t\t\t\t\t\t'total_commission' => 0.00\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (!isset($commissionData[$publisher]['monthly'][$month])) {\n\t\t\t\t\t$commissionData[$publisher]['monthly'][$month] = [\n\t\t\t\t\t\t'location' => $location,\n\t\t\t\t\t\t'journal_sums' => array_fill_keys($journalTypesToSummarize, 0.00),\n\t\t\t\t\t\t'commission' => 0.00\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t// 累加全款\n\t\t\t\t$commissionData[$publisher]['monthly'][$month]['journal_sums'][$journalType] += $fullAmount;\n\n\t\t\t\t// 同时，累加各期刊类型的总金额（用于显示）\n\t\t\t\t$commissionData[$publisher]['journal_sums'][$journalType] += $fullAmount;\n\t\t\t}\n\n\t\t\t// 第二步：根据每个月的汇总金额计算提成\n\t\t\tforeach ($commissionData as $publisher => &$data) {\n\t\t\t\tforeach ($data['monthly'] as $month => &$monthData) {\n\t\t\t\t\t$monthCommission = 0.00;\n\n\t\t\t\t\tforeach ($journalTypesToSummarize as $jt) {\n\t\t\t\t\t\t$totalAmount = $monthData['journal_sums'][$jt];\n\n\t\t\t\t\t\tif ($totalAmount > 0) {\n\t\t\t\t\t\t\tif ($jt === 'ES') {\n\t\t\t\t\t\t\t\t// 对于 ES 期刊类型，根据发布地点进行不同的提成计算\n\t\t\t\t\t\t\t\t$location = $monthData['location'];\n\t\t\t\t\t\t\t\tif ($location == '徐州') {\n\t\t\t\t\t\t\t\t\tif ($totalAmount <= 20000) {\n\t\t\t\t\t\t\t\t\t\t$commission = $totalAmount * 0.05;\n\t\t\t\t\t\t\t\t\t} elseif ($totalAmount <= 50000) {\n\t\t\t\t\t\t\t\t\t\t$commission = (20000 * 0.05) + (($totalAmount - 20000) * 0.07);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$commission = (20000 * 0.05) + (30000 * 0.07) + (($totalAmount - 50000) * 0.10);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// 非徐州地区，根据不同人员的提成规则\n\t\t\t\t\t\t\t\t\tif ($publisher === '花永超') {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.20;\n\t\t\t\t\t\t\t\t\t} elseif ($publisher === '钱燕燕') {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.16;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.10;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$commission = $totalAmount * $rate;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$monthCommission += $commission;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// 其他期刊类型的提成计算\n\t\t\t\t\t\t\t\t$rates = $commissionRates[$jt];\n\t\t\t\t\t\t\t\t$rate = 0.00;\n\n\t\t\t\t\t\t\t\t// 排序阈值\n\t\t\t\t\t\t\t\t$thresholds = array_filter(array_keys($rates), function ($t) {\n\t\t\t\t\t\t\t\t\treturn $t !== 'above'; });\n\t\t\t\t\t\t\t\tsort($thresholds, SORT_NUMERIC);\n\n\t\t\t\t\t\t\t\tforeach ($thresholds as $threshold) {\n\t\t\t\t\t\t\t\t\tif ($totalAmount <= $threshold) {\n\t\t\t\t\t\t\t\t\t\t$rate = $rates[$threshold];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// 如果金额超过所有阈值，使用 'above' 的提成比例\n\t\t\t\t\t\t\t\tif ($totalAmount > 350000 && isset($rates['above'])) {\n\t\t\t\t\t\t\t\t\t$rate = $rates['above'];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$commission = $totalAmount * $rate;\n\t\t\t\t\t\t\t\t$monthCommission += $commission;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// 记录本月的提成\n\t\t\t\t\t$monthData['commission'] = $monthCommission;\n\n\t\t\t\t\t// 累加到发布人的总提成\n\t\t\t\t\t$data['total_commission'] += $monthCommission;\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($data);\n\t\t\tunset($monthData);\n\n\t\t\t// 第三步：计算总计\n\t\t\t$totals = array_fill_keys($journalTypesToSummarize, 0.00);\n\t\t\t$totalCommission = 0.00;\n\n\t\t\tforeach ($commissionData as $publisher => $data) {\n\t\t\t\tforeach ($journalTypesToSummarize as $jt) {\n\t\t\t\t\t$totals[$jt] += $data['journal_sums'][$jt];\n\t\t\t\t}\n\t\t\t\t$totalCommission += $data['total_commission'];\n\t\t\t}\n\n\t\t\t// 将总计添加到汇总数据\n\t\t\t$commissionData['总计'] = [\n\t\t\t\t'journal_sums' => $totals,\n\t\t\t\t'total_commission' => $totalCommission\n\t\t\t];\n\n\t\t\t// 第四步：准备显示数据\n\t\t\t$displayData = [];\n\n\t\t\tforeach ($commissionData as $publisher => $data) {\n\t\t\t\tif ($publisher === '总计') {\n\t\t\t\t\t$displayData[$publisher] = $data['journal_sums'];\n\t\t\t\t\t$displayData[$publisher]['总提成'] = $data['total_commission'];\n\t\t\t\t} else {\n\t\t\t\t\t$displayData[$publisher] = $data['journal_sums'];\n\t\t\t\t\t$displayData[$publisher]['总提成'] = $data['total_commission'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 将汇总数据存入会话\n\t\t\tsession('commissionData', $displayData);\n\t\t\tsession('journalTypesToSummarize', $journalTypesToSummarize);\n\n\n\t\t\t$this->ajaxReturn(['msg' => 'success', 'url' => U('Ticket/exportMoney'), 'download' => true]);\n\t\t} else {\n\t\t\t$tableHeader = session('TicketExcelData')['header'];\n\t\t\t$excelData = session('TicketExcelData')['excelData'];\n\t\t\t$commissionData = session('commissionData');\n\t\t\t$journalTypesToSummarize = session('journalTypesToSummarize');\n\n\t\t\t// 将所有数据存储在会话中\n\t\t\tsession('TicketExportData', [\n\t\t\t\t'excelData' => $excelData,\n\t\t\t\t'header' => $tableHeader,\n\t\t\t\t'commissionData' => $commissionData,\n\t\t\t\t'journalTypesToSummarize' => $journalTypesToSummarize\n\t\t\t]);\n\t\t\t// session('TicketExportData', ['excelData' => $excelData, 'header' => $tableHeader]);\n\t\t\theader(\"Location: http://47.122.66.77/Ticket/allTicket3\");\n\t\t\texit();  // 终止脚本执行，确保跳转后没有其他内容输出\n\n\t\t}\n\t}\n\n\t// 定义辅助函数\n\tfunction parseTimeoutPeriod($timeoutStr)\n\t{\n\t\t// 初始化各部分时间为0\n\t\t$days = 0;\n\t\t$hours = 0;\n\t\t$minutes = 0;\n\n\t\t// 使用正则表达式提取天、时、分\n\t\tif (preg_match('/(\\d+)天/', $timeoutStr, $matches)) {\n\t\t\t$days = intval($matches[1]);\n\t\t}\n\n\t\tif (preg_match('/(\\d+)时/', $timeoutStr, $matches)) {\n\t\t\t$hours = intval($matches[1]);\n\t\t}\n\n\t\tif (preg_match('/(\\d+)分/', $timeoutStr, $matches)) {\n\t\t\t$minutes = intval($matches[1]);\n\t\t}\n\n\t\t// 计算总秒数\n\t\t$total_seconds = $days * 86400 + $hours * 3600 + $minutes * 60;\n\n\t\t// 如果总秒数为0，说明未能解析任何时间部分\n\t\tif ($total_seconds === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $total_seconds;\n\t}\n\n\t//    导出工单\n\n\tpublic function export($action = '')\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$export = C('EXPORT');\n\n\t\t\t$where = session('TicketExportWhere');\n\n\t\t\t$data = I('get.exportList');\n\n\t\t\t$member_id = I('get.id');\n\n\t\t\tif (!$data)\n\t\t\t\t$this->ajaxReturn(['msg' => L('SELECT_EXPORT')]);\n\n\t\t\t$exportList = $tableHeader = $letter = $excelData = [];\n\n\t\t\t$field = ['ticket_id'];\n\n\t\t\tforeach ($export as $k => $v) {\n\t\t\t\tif (in_array($v['identity'], $data)) {\n\t\t\t\t\t$exportList[$k] = $v['identity'];\n\t\t\t\t\tarray_push($field, $v['identity']);\n\t\t\t\t\t$tableHeader[] = $v['name'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 确保照片列在表头中\n\t\t\tif (!in_array('照片', $tableHeader)) {\n\t\t\t\t$tableHeader[] = '照片';  // 添加照片列\n\t\t\t}\n\n\t\t\t// 过滤非ticket数据表字段\n\t\t\t$field = implode(',', array_diff($field, ['timeout', 'timeout_period', 'reply_content']));\n\n\t\t\tif ($member_id > 0) {\n\t\t\t\t$tickets = $this->$action($member_id, 'export', $where, $field);\n\t\t\t} else {\n\t\t\t\t$tickets = $this->$action('export', $where, $field);\n\t\t\t}\n\n\t\t\t// 处理模板自定义表单\n\t\t\tif ($data['form']) {\n\t\t\t\tforeach ($data['form']['name'] as $nv) {\n\t\t\t\t\tarray_push($tableHeader, $nv);\n\t\t\t\t}\n\n\t\t\t\t// 将回复内容移至表格最后一列\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$key = array_search('reply_content', $data);\n\t\t\t\t\tarray_push($tableHeader, $tableHeader[$key]);\n\t\t\t\t\tunset($tableHeader[$key]);\n\t\t\t\t\t$tableHeader = array_values($tableHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 整合表格数据\n\t\t\tforeach ($tickets as $k => $v) {\n\t\t\t\tif (isset($v['ticket_id'])) {\n\t\t\t\t\t$photoData = M('ticket')->where(['ticket_id' => $v['ticket_id']])->getField('photo');\n\t\t\t\t\t$v['photos'] = '暂无相关图片';  // 默认值\n\t\t\t\t\tif ($photoData) {\n\t\t\t\t\t\t$photos = unserialize($photoData);\n\t\t\t\t\t\tif (is_array($photos)) {\n\t\t\t\t\t\t\t$formattedPhotos = [];\n\t\t\t\t\t\t\tforeach ($photos as $index => $photo) {\n\t\t\t\t\t\t\t\tif (filter_var($photo, FILTER_VALIDATE_URL)) {\n\t\t\t\t\t\t\t\t\t// 分别标记定金和全款图片\n\t\t\t\t\t\t\t\t\t$formattedPhotos[] = $index === 0 ? \"定金: {$photo}\" : ($index === 1 ? \"全款: {$photo}\" : $photo);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// 将格式化后的图片URLs添加到 $v 数组\n\t\t\t\t\t\t\tif (!empty($formattedPhotos)) {\n\t\t\t\t\t\t\t\t$v['photos'] = implode(' | ', $formattedPhotos);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 清理不需要的键\n\t\t\t\tforeach ($v as $k1 => &$v1) {\n\t\t\t\t\tif (!in_array($k1, $exportList) && $k1 != 'ticket_id' && $k1 != 'photos')\n\t\t\t\t\t\tunset($v[$k1]);\n\t\t\t\t}\n\n\t\t\t\t$excelData[] = $v;\n\t\t\t}\n\n\t\t\t//\t\t\t交集 - 存在发布人、处理人、回复则查询用户表\n\t\t\tif (array_intersect($data, ['member_id', 'dispose_id', 'reply_content'])) {\n\t\t\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\t\t\t} else {\n\t\t\t\t$members = [];\n\t\t\t}\n\t\t\t$excelData = $this->feelecYieldToArray($excelData);\n\n\t\t\t$yieldData = [];\n\n\t\t\t// 为表格每行添加正确的数据\n\t\t\tforeach ($excelData as $k => $v) {\n\t\t\t\t$yieldData[$k] = $v;\n\n\t\t\t\tif ($v['ticket_from'])\n\t\t\t\t\t$yieldData[$k]['ticket_from'] = D('Ticket')->getTicketFrom($v['ticket_from']);\n\n\t\t\t\tif ($v['status_id'])\n\t\t\t\t\t$yieldData[$k]['status_id'] = D('Ticket')->getFieldInfo('ticket_status', ['status_id' => $v['status_id']], 'status_name', 1);\n\n\t\t\t\tif ($v['ticket_model_id'])\n\t\t\t\t\t$yieldData[$k]['ticket_model_id'] = D('Ticket')->getFieldInfo('ticket_model', ['ticket_model_id' => $v['ticket_model_id']], 'ticket_model_name', 1);\n\n\t\t\t\tif ($v['priority'])\n\t\t\t\t\t$yieldData[$k]['priority'] = D('Ticket')->getPriority($v['priority']);\n\n\t\t\t\tif ($v['member_id'])\n\t\t\t\t\t$yieldData[$k]['member_id'] = $members[$v['member_id']]['name'];\n\n\t\t\t\tif ($v['recipient_id'])\n\t\t\t\t\t$yieldData[$k]['recipient_id'] = $members[$v['recipient_id']]['name'];\n\n\t\t\t\tif ($v['dispose_id'])\n\t\t\t\t\t$yieldData[$k]['dispose_id'] = $members[$v['dispose_id']]['name'];\n\n\t\t\t\tif ($v['create_time'])\n\t\t\t\t\t$yieldData[$k]['create_time'] = \"\\t\" . getDates($v['create_time']);\n\n\t\t\t\tif ($v['end_time'])\n\t\t\t\t\t$yieldData[$k]['end_time'] = \"\\t\" . getDates($v['end_time']);\n\n\t\t\t\t//\t\t\t\t  是否超时\n\t\t\t\tif (in_array('timeout', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout'] = strip_tags($timeout);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  超时时长\n\t\t\t\tif (in_array('timeout_period', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout_period = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout_period = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time'], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout_period'] = strip_tags($timeout_period);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  模板自定义表单值\n\t\t\t\tif ($data['form']) {\n\t\t\t\t\tforeach ($data['form']['id'] as $dv) {\n\t\t\t\t\t\t$content = D('Ticket')->getFieldInfo('ticket_detail', ['ticket_id' => $v['ticket_id'], 'ticket_form_id' => $dv], 'ticket_form_content');\n\n\t\t\t\t\t\t$yieldData[$k][] = \"\\t\" . strip_tags(getHtml($content));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  回复内容\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$replys = M('ticket_reply')\n\t\t\t\t\t\t->where(['ticket_id' => $v['ticket_id'], 'company_id' => $this->_company_id])\n\t\t\t\t\t\t->field('member_id,reply_content,reply_time')\n\t\t\t\t\t\t->order('reply_id asc')\n\t\t\t\t\t\t->select();\n\n\t\t\t\t\t$replys = $this->feelecYieldToArray($replys);\n\n\t\t\t\t\tforeach ($replys as $r) {\n\t\t\t\t\t\t$content = strip_tags(getHtml($r['reply_content']));\n\n\t\t\t\t\t\t$reply_content[] = \"【回复人：{$members[$r['member_id']]['name']}，回复时间：\" . getDates($r['reply_time']) . \"，回复内容：{$content}】\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($reply_content) && $reply_content) {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = str_replace([\"\\r\", \"\\n\"], '', implode(' | ', $reply_content)); //去除换行，防止单元格内容换行\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tunset($reply_content, $replys);\n\t\t\t\t}\n\t\t\t\tif (isset($v['photos'])) {\n\t\t\t\t\t$yieldData[$k]['photos'] = $v['photos'];\n\t\t\t\t}\n\n\t\t\t\tunset($yieldData[$k]['ticket_id']);\n\t\t\t}\n\n\t\t\t$excel = ['header' => $tableHeader, 'excelData' => $yieldData];\n\n\t\t\tsession('TicketExcelData', $excel);\n\n\t\t\t$this->ajaxReturn(['msg' => 'success', 'url' => U('Ticket/export'), 'download' => true]);\n\t\t} else {\n\t\t\t$tableHeader = session('TicketExcelData')['header'];\n\t\t\t$excelData = session('TicketExcelData')['excelData'];\n\n\t\t\t$filename = 'Ticket-' . date('YmdHis') . '.csv';\n\n\t\t\t$csv = new Csv();\n\t\t\t$csv->exportCsv($excelData, $tableHeader, $filename);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\tpublic function getPhotoUrls($serializedPhotos)\n\t{\n\t\t$photoUrls = [];\n\t\t$photos = unserialize($serializedPhotos);\n\t\tif (is_array($photos)) {\n\t\t\tforeach ($photos as $photo) {\n\t\t\t\tif (filter_var($photo, FILTER_VALIDATE_URL)) {\n\t\t\t\t\t$photoUrls[] = $photo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn implode(\", \", $photoUrls); // Combine all URLs into a single string, separated by commas\n\t}\n\n\n\n\t/**\n\t * Yield生成器处理\n\t * @param array $data 需要处理的数据\n\t * @return Generator\n\t */\n\tpublic function feelecYieldToArray($data)\n\t{\n\t\tforeach ($data as $value) {\n\t\t\tyield $value;\n\t\t}\n\t}\n}\n"
        },
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1735539327450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1735539327450,
            "name": "Commit1-30-12- 14:15",
            "content": "<?php\n// +----------------------------------------------------------------------\n// | FeelDesk-DEV开源工单管理系统\n// +----------------------------------------------------------------------\n// | 欢迎阅读学习系统程序代码，您的建议反馈是我们前进的动力\n// | 开源版本仅供技术交流学习，请务必保留界面版权logo\n// | 商业版本务必购买商业授权，以免引起法律纠纷\n// | 禁止对系统程序代码以任何目的，任何形式的再发布\n// | gitee下载：https://gitee.com/feelecs/feeldesk-dev-base\n// | 开源官网：https://www.feeldesk.com.cn\n// | 成都菲莱克斯科技有限公司 版权所有 拥有最终解释权\n// +----------------------------------------------------------------------\nnamespace Index\\Controller;\n\nuse Index\\Common\\BasicController;\n\nuse Think\\Csv;\n\nclass TicketController extends BasicController\n{\n\tprotected static $ticket_status = [];\n\n\tprotected static $first_status = [];\n\n\tprotected static $end_status = [];\n\n\n\tpublic function _initialize()\n\t{\n\t\tparent::_initialize();\n\n\t\t$statusName = D('TicketStatus')->getNameByLang('status_name');\n\n\t\tself::$ticket_status = D('TicketStatus')->where(['company_id' => $this->_company_id])->field(\"*,{$statusName}\")->order('sort asc')->fetchAll();\n\n\t\tforeach (self::$ticket_status as $v) {\n\t\t\tif ($v['is_first'] == 1)\n\t\t\t\tself::$first_status = $v;\n\n\t\t\tif ($v['is_end'] == 1)\n\t\t\t\tself::$end_status = $v;\n\t\t}\n\n\t\t$this->assign('ticket_status', self::$ticket_status);\n\n\t\t$this->assign('ticketObj', D('Ticket'));\n\t}\n\n\n\t/*\n\t * 选择工单模板\n\t */\n\tpublic function template()\n\t{\n\t\t$ticketTemplate = D('TemplateType')->getTicketTempLate($this->_company_id, 1);\n\n\t\t$this->assign('ticketTemplate', $ticketTemplate);\n\n\t\t$this->display();\n\n\t}\n\n\n\t/*\n\t * 我发布的工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array $where 导出工单时的查询条件\n\t * @param string $field 需要导出的工单字段信息\n\t */\n\tpublic function myTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['member_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 所有工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function allTicket($source = '', $where = [], $field = '')\n\t{\n\n\t\t$defaultTemplateIds = [5]; // 设置默认模板ID为 5\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\t/*\n\t * 所有工单\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function allTicket2($source = '', $where = [], $field = '')\n\t{\n\t\t$defaultTemplateIds = [6, 7]; // 设置默认模板ID为 6 和 7\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\t/*\n\t * 提成工单\n\t */\n\tpublic function allTicket3($source = '', $where = [], $field = '')\n\t{\n\t\t// 默认模板ID为5\n\t\t$defaultTemplateIds = [5];\n\t\t$where = $source == 'export' ? $where : $this->getField($source, $defaultTemplateIds);\n\n\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t// 获取导出的数据\n\t\t$ticketExportData = session('TicketExportData');\n\n\t\t// 如果有导出的数据，传递到视图\n\t\tif ($ticketExportData) {\n\t\t\t$this->assign('excelData', $ticketExportData['excelData']);\n\t\t\t$this->assign('tableHeader', $ticketExportData['header']);\n\t\t\t$this->assign('commissionData', $ticketExportData['commissionData']);\n\t\t\t$this->assign('journalTypesToSummarize', $ticketExportData['journalTypesToSummarize']);\n\t\t}\n\n\n\n\n\n\n\t\t// 渲染视图\n\t\t$this->display();\n\t}\n\n\tpublic function allTicket4()\n\t{\n\t\t// 从 session 中获取导出的数据\n\t\t$ticketExportData = session('TicketExportData');\n\n\t\t// 如果有导出的数据，传递到视图\n\t\tif ($ticketExportData) {\n\t\t\t$this->assign('excelData', $ticketExportData['excelData']);\n\t\t\t$this->assign('tableHeader', $ticketExportData['header']);\n\t\t}\n\n\t\t// 渲染视图\n\t\t$this->display();\n\t}\n\n\n\n\t/*\n\t * 我处理的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function disposeTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['dispose_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我参与的\n\t * @param string $source 来源，当前只用于导出工单\n\t * $param array  $where 导出工单时的查询条件\n\t * $param string $field 需要导出的工单字段信息\n\t */\n\tpublic function partakeTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$partTickets = M('ticket_partake')->where(['company_id' => $this->_company_id, 'member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t$ticketIds = $partTickets ? array_column($partTickets, 'ticket_id') : '-1';\n\n\t\t$where['ticket_id'] = ['in', $ticketIds];\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我所在组的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function groupTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['group_id'] = ['in', $this->_member['group_id']];\n\n\t\t//        $where['dispose_id'] = ['eq',0];\n\n\t\t$group_id = M('Group')->where(['group_id' => ['in', $this->_member['group_id']], 'is_task' => 2])->getField('group_id');\n\n\t\tif ($group_id)\n\t\t\tunset($where['group_id']);\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 待审核的\n\t */\n\tpublic function waitAuditTicket()\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'audit_status' => ['in', [2, 4, 5, 6]], 'delete' => 2];\n\n\t\tif ($keyword = I('get.keyword')) {\n\t\t\t$where['title|ticket_no'] = ['LIKE', '%' . $keyword . '%'];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t//\t\t所有处于待审和被驳回的工单\n\t\t$tickets = M('ticket')->where($where)->field('ticket_id,title,ticket_no,member_id,ticket_from,create_time')->order('ticket_id asc')->select();\n\n\t\tforeach ($tickets as $k => $v) {\n\t\t\t//\t    \t1. 获取当前登录人员针对工单的审核节点信息\n\t\t\t$progress_map = ['ticket_id' => $v['ticket_id'], 'member_id' => $this->member_id, 'audit_status' => 10];\n\n\t\t\t$progress = M('audit_progress')->where($progress_map)->order('audit_level asc')->field('id,audit_level,audit_type')->find();\n\n\t\t\t//\t\t\t2. 若审核节点所处的审核类型为 会审\n\t\t\t$nowProgress = [];\n\n\t\t\tif ($progress['audit_type'] == 30) {\n\t\t\t\t//              3. 查询本层级中是否存在未审核的上一个节点\n\t\t\t\t$now_progress_map = ['ticket_id' => $v['ticket_id'], 'audit_status' => 10, 'audit_level' => $progress['audit_level'], 'id' => ['lt', $progress['id']]];\n\n\t\t\t\t$nowProgress = M('audit_progress')->where($now_progress_map)->field('id,member_id')->find();\n\t\t\t}\n\n\t\t\tif (!$nowProgress) {\n\t\t\t\t//\t    \t    4. 查询是否存在上一层级未审核的节点\n\t\t\t\t$upper_reviewer_map = ['ticket_id' => $v['ticket_id'], 'audit_status' => 10, 'audit_level' => ['lt', $progress['audit_level']]];\n\n\t\t\t\t//\t\t\t\t上一层级未审核的节点的审核人ID\n\t\t\t\t$upper_reviewer_id = M('audit_progress')->where($upper_reviewer_map)->getField('member_id');\n\n\t\t\t\t//\t\t\t\t不存在，但审核流程里有当前人员或者存在并且节点审核人 == 当前登录人员时有权限\n\t\t\t\t$audit_auth = !$upper_reviewer_id ? $progress['id'] : $upper_reviewer_id == $this->member_id;\n\t\t\t} else {\n\t\t\t\t//\t\t\t\t当审核层级类型为会审时，本层级存在未审核的上一节点时，当前人员没有审核权限\n\t\t\t\t$audit_auth = false;\n\t\t\t}\n\n\t\t\tif (!$audit_auth)\n\t\t\t\tunset($tickets[$k]);\n\t\t}\n\n\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('tickets', $tickets);\n\n\t\t$this->assign('members', $members);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 我发布的待审核工单\n\t */\n\tpublic function waitAuditMyTicket()\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'member_id' => $this->member_id, 'audit_status' => ['in', [2, 4, 5]], 'delete' => 2];\n\n\t\tif ($keyword = I('get.keyword')) {\n\t\t\t$where['title|ticket_no'] = ['LIKE', '%' . $keyword . '%'];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t$tickets = M('ticket')->where($where)->field('ticket_id,title,ticket_no,member_id,ticket_from,create_time')->order('ticket_id asc')->select();\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('tickets', $tickets);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 抄送给我的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function ccTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$ccTicketIds = D('CcTicket')->where(['member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t$ticketIds = array_column($ccTicketIds, 'ticket_id');\n\n\t\t$ticketIds = $ticketIds ? $ticketIds : '-1';\n\n\t\t$where['ticket_id'] = ['in', $ticketIds];\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 待回复的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function waitReplyTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t//        当前登录人所有发布和处理的工单\n\t\t$list = $this->getTicketList($source, $where, $field, 'waitReplyTicket');\n\n\t\tif ($source == 'export')\n\t\t\treturn $list;\n\n\t\t$this->assign('ticket', $list);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 指定成员的\n\t * @param string $id     成员ID\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function memberTicket($id = '', $source = '', $where = [], $field = '')\n\t{\n\t\tif ($id) {\n\t\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t\t$where['member_id|related_id'] = $id;\n\n\t\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\t\tif ($source == 'export')\n\t\t\t\treturn $list;\n\n\t\t\t$this->assign('ticket', $list);\n\n\t\t\t$this->assign('id', $id);\n\n\t\t\t$this->display();\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\t/*\n\t * 超时的\n\t * @param string $source 来源，当前只用于导出工单\n\t * @param array  $where  导出工单时的查询条件\n\t * @param string $field  需要导出的工单字段信息\n\t */\n\tpublic function timeoutTicket($source = '', $where = [], $field = '')\n\t{\n\t\t$where = $source == 'export' ? $where : $this->getField($source);\n\n\t\t$where['dispose_id'] = $this->member_id;\n\n\t\t$list = $this->getTicketList($source, $where, $field);\n\n\t\t//        完成期限\n\t\t$deadlines = M('ticket_deadlines')->where(['company_id' => $this->_company_id])->select();\n\n\t\t$deadTimes = [];\n\n\t\tforeach ($deadlines as $d) {\n\t\t\t$deadTimes[$d['ticket_id']] = $d;\n\t\t}\n\n\t\t$deadTickets = $globalTickets = [];\n\n\t\tforeach ($list as $k => $v) {\n\t\t\t//            组件超时工单\n\t\t\tif ($deadTimes[$v['ticket_id']]) {\n\t\t\t\tif (checkTicketIsTimeoutByCron($deadTimes[$v['ticket_id']]['deadtime'], $v['end_time']) == true) {\n\t\t\t\t\t$deadTickets[$v['ticket_id']] = $v;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//                全局超时工单\n\t\t\t\tif (checkTicketIsTimeoutByGlobal($v['ticket_id'], $v['create_time'], $v['end_time'])) {\n\t\t\t\t\t$globalTickets[$v['ticket_id']] = $v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$tickets = $deadTickets + $globalTickets;\n\n\t\tkrsort($tickets);\n\n\t\tif ($source == 'export')\n\t\t\treturn $tickets;\n\n\t\t$this->assign('ticket', $tickets);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 回收站\n\t * @param string $keyword 搜索关键词\n\t */\n\tpublic function recycle($keyword = '')\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'delete' => 1];\n\n\t\tif ($keyword) {\n\t\t\t$where['title|ticket_no'] = [\"like\", \"%{$keyword}%\"];\n\n\t\t\t$this->assign('keyword', $keyword);\n\t\t}\n\n\t\t$count = D('Ticket')->where($where)->count('ticket_id');\n\n\t\t$Page = new \\Think\\Page($count, 400);\n\n\t\t$recycleData['tickets'] = D('Ticket')->where($where)\n\t\t\t->limit($Page->firstRow, $Page->listRows)\n\t\t\t->field('ticket_id,ticket_no,title,delete_time,delete_member_id,delete_ip')\n\t\t\t->order('delete_time desc')\n\t\t\t->select();\n\n\t\t$recycleData['members'] = D('Member')->where(['company_id' => $this->_company_id, 'type' => 1])->field('member_id,name')->fetchAll();\n\n\t\t$recycleData['completeDeleteAuth'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/complete_delete', $this->_member['role_id']);\n\n\t\t$recycleData['recoverTicketAuth'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/recover', $this->_member['role_id']);\n\n\t\t$Page->setConfig('prev', \"<i class='iconfont icon-zuo'></i>\");\n\n\t\t$Page->setConfig('next', \"<i class='iconfont icon-you'></i>\");\n\n\t\t$this->assign('page', $Page->show()); //\n\n\t\t$this->assign('recycleData', $recycleData);\n\n\t\t$this->display();\n\t}\n\n\n\t/*\n\t * 获取get查询条件\n\t * @param string $source 来源\n\t * @param array $defaultTemplateIds 默认为传入的模板ID数组\n\t * @return array\n\t */\n\tprivate function getField($source = '', $defaultTemplateIds = [])\n\t{\n\t\t$where = array();\n\n\t\t$filter = [\n\t\t\t'keyword' => isset($_GET['keyword']) && $_GET['keyword'] ? I('get.keyword') : '',\n\t\t\t'ticket_from' => I('get.ticket_from', []),\n\t\t\t'priority' => I('get.priority', []),\n\t\t\t'statusIds' => I('get.status') ? explode(',', I('get.status')) : [],\n\t\t\t'templateTypeIds' => I('get.template_type_id') ? explode(',', I('get.template_type_id')) : (!empty($defaultTemplateIds) ? $defaultTemplateIds : []), // 如果传入了模板ID数组则使用\n\t\t\t'template_id' => I('get.template_id', 0),\n\t\t\t'publishIds' => I('get.publishIds') ? explode(',', I('get.publishIds')) : [],\n\t\t\t'groupIds' => I('get.groupIds', []),\n\t\t\t'handleIds' => I('get.handleIds', []),\n\t\t\t'timeId' => I('get.timeId', -1),\n\t\t\t'datetime' => isset($_GET['datetime']) && $_GET['datetime'] ? explode('~', urldecode($_GET['datetime'])) : []\n\t\t];\n\n\t\tif ($filter['keyword']) {\n\t\t\t//            发布人姓名和邮箱，手机号作为筛选条件\n\t\t\tif (isEmail($filter['keyword']) || (strlen($filter['keyword']) == 11 && isMobile($filter['keyword']))) {\n\t\t\t\t$where['member_id'] = M('member')->where(['company_id' => $this->_company_id, 'mobile|email|account' => $filter['keyword']])->getField('member_id');\n\t\t\t} else {\n\t\t\t\t$memberIds = M('member')->where(['company_id' => $this->_company_id, 'name' => $filter['keyword']])->field('member_id')->select();\n\n\t\t\t\tif ($memberIds) {\n\t\t\t\t\t$memberIds = array_column($memberIds, 'member_id');\n\n\t\t\t\t\t$where['member_id'] = ['in', $memberIds];\n\t\t\t\t} else {\n\t\t\t\t\t$where['ticket_no|title|related_name'] = ['LIKE', '%' . $filter['keyword'] . '%'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\t    来源\n\t\tif ($filter['ticket_from']) {\n\t\t\t$where['ticket_from'] = ['in', $filter['ticket_from']];\n\t\t}\n\n\t\t//\t    优先级\n\t\tif ($filter['priority']) {\n\t\t\t$where['priority'] = ['in', $filter['priority']];\n\t\t}\n\n\t\t//\t    状态\n\t\tif ($filter['statusIds']) {\n\t\t\t$where['status_id'] = ['in', $filter['statusIds']];\n\t\t}\n\n\t\t//\t    模板类型\n\t\tif ($filter['templateTypeIds']) {\n\t\t\t$where['type_id'] = ['in', $filter['templateTypeIds']];\n\t\t}\n\n\t\t//\t    模板\n\t\tif ($filter['template_id']) {\n\t\t\t$where['ticket_model_id'] = ['in', $filter['template_id']];\n\n\t\t\t$ticket_form = M('ticket_form')->where(['ticket_model_id' => $filter['template_id'], 'closed' => 0])\n\t\t\t\t->field('ticket_form_id as id,ticket_form_description as name,orderby')\n\t\t\t\t->order('orderby asc')->select();\n\n\t\t\t$this->assign('ticketForm', $ticket_form);\n\t\t}\n\n\t\t//\t    发布人\n\t\tif ($filter['publishIds']) {\n\t\t\t$where['member_id'] = ['in', $filter['publishIds']];\n\t\t}\n\n\t\t//\t    处理人\n\t\tif ($filter['handleIds']) {\n\t\t\t$where['dispose_id'] = ['in', $filter['handleIds']];\n\t\t}\n\n\t\tif ($filter['datetime']) {\n\t\t\t$where['create_time'] = [['egt', strtotime(trim($filter['datetime'][0]))], ['elt', strtotime(trim($filter['datetime'][1]))]];\n\n\t\t\t$this->assign('datetime', urldecode($_GET['datetime']));\n\t\t} else {\n\t\t\tif ($source !== 'export' && $filter['timeId'] == -1) {\n\t\t\t\t$create_time = D('Ticket')->getStartTime(365);\n\n\t\t\t\t$filter['timeId'] = 30;\n\t\t\t} else {\n\t\t\t\t$start_time = D('Ticket')->getStartTime($filter['timeId']);\n\n\t\t\t\t$create_time = $start_time ? $start_time : D('Ticket')->getStartTime(365);\n\t\t\t}\n\n\t\t\t$where['create_time'] = [['egt', $create_time], ['elt', time()]];\n\t\t}\n\n\t\t$where['sort'] = isset($_GET['sort']) && $_GET['sort'] ? I('get.sort') : 'desc';\n\n\t\t$where['order'] = isset($_GET['sort_field']) && $_GET['sort_field'] ? I('get.sort_field') : 'ticket_id';\n\n\t\t$where['company_id'] = $this->_company_id;\n\n\t\t$where['audit_status'] = ['in', '1,3'];\n\n\t\t$where['delete'] = 2;\n\n\t\t$this->assign('filter', $filter);\n\n\t\t$this->assign('sort', $where['sort']);\n\n\t\t$this->assign('sort_field', $where['order']);\n\n\t\t$this->assign('end_status', self::$end_status);\n\n\t\t$this->assign('filterData', json_encode($filter));\n\n\t\tsession('TicketExportWhere', $where);\n\n\t\treturn $where;\n\t}\n\n\n\t/*\n\t * 获取工单列表\n\t * @param array $field 条件字段\n\t * @return array\n\t */\n\tpublic function getTicketList($source = '', $where = [], $field = '*', $action = '')\n\t{\n\t\t$list = [];\n\t\t$order = '';\n\n\t\t$cookie_view_source = cookie('ticket_view_source_' . $this->_company_id . '_' . $this->member_id);\n\n\t\t$view_source = isset($_GET['view_source']) && $_GET['view_source'] ? I('get.view_source') : ($cookie_view_source ? $cookie_view_source : 'list');\n\n\t\t$show_end_ticket = cookie('show_end_ticket_' . $this->_company_id . '_' . $this->member_id);\n\n\t\t$show_end_ticket = $show_end_ticket ? $show_end_ticket : 'show';\n\n\t\tif (!in_array($view_source, ['minimalist', 'list'])) {\n\t\t\t$view_source = 'minimalist';\n\t\t}\n\n\t\t$template_map = ['company_id' => $this->_company_id];\n\n\n\t\tif ($where) {\n\t\t\tif (isset($where['type_id']) && $where['type_id']) {\n\t\t\t\t$template_map['type_id'] = $where['type_id'];\n\t\t\t}\n\n\t\t\tif (isset($where['order']) && $where['order']) {\n\t\t\t\tif (is_array($where['order'])) {\n\t\t\t\t\tforeach ($where['order'] as $v)\n\t\t\t\t\t\t$order .= $v . \" \" . $where['sort'] . \",\";\n\n\t\t\t\t\t$order = rtrim($order, ',');\n\t\t\t\t} else {\n\t\t\t\t\t$order = $where['order'] . \" \" . $where['sort'];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$order = \"ticket_id \" . $where['sort'];\n\t\t\t}\n\n\t\t\tunset($where['order'], $where['sort']);\n\n\t\t\tif ($show_end_ticket != 'show' && (!isset($where['status_id']) || !$where['status_id'])) {\n\t\t\t\t$where['status_id'] = ['neq', self::$end_status['status_id']];\n\t\t\t}\n\t\t\t// 特殊条件：排除 member_id 为 2 且 ticket_form_id 为 24 且 ticket_form_content 为 '南京' 的工单\n\t\t\tif ($this->member_id == 16 || $this->member_id == 17) {\n\t\t\t\t$exclude_tickets = M('ticket_detail')\n\t\t\t\t\t->where(['ticket_form_id' => 24, 'ticket_form_content' => '南京'])\n\t\t\t\t\t->getField('ticket_id', true);\n\n\t\t\t\tif ($exclude_tickets) {\n\t\t\t\t\t$where['ticket_id'] = ['not in', $exclude_tickets];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($this->member_id == 26) {\n\t\t\t\t// 定义需要包含的工单状态数组\n\t\t\t\t$allowed_status_ids = [9, 4, 5, 6];\n\n\t\t\t\t// 设置查询条件仅包含特定状态的工单\n\t\t\t\t$where['status_id'] = ['in', $allowed_status_ids];\n\t\t\t}\n\n\n\t\t\tif ($source == 'export') {\n\t\t\t\tif ($action == 'waitReplyTicket') {\n\t\t\t\t\t$field = $field === '*' ? 'ticket_id,title,member_id,ticket_no,look,create_time,end_time,recipient_id,dispose_id,status_id,ticket_from,priority' : $field;\n\n\t\t\t\t\t$param = [\n\t\t\t\t\t\t'company_id' => $this->_company_id,\n\t\t\t\t\t\t'member_id' => $this->member_id,\n\t\t\t\t\t\t'field' => $field\n\t\t\t\t\t];\n\n\t\t\t\t\t$result = D('Ticket')->getWaitReplyTicketData($param, $where);\n\n\t\t\t\t\t$list = fetchAll($result['tickets'], 'ticket_id');\n\t\t\t\t} else {\n\t\t\t\t\t$list = D('Ticket')->where($where)->order($order)->field($field)->fetchAll();\n\t\t\t\t}\n\n\t\t\t\treturn $list;\n\t\t\t} else {\n\t\t\t\t//                设置默认工单显示方式\n\t\t\t\tD('Ticket')->updateSourceView($view_source, $this->member_id);\n\n\t\t\t\tif ($action == 'waitReplyTicket') {\n\t\t\t\t\t$param = [\n\t\t\t\t\t\t'company_id' => $this->_company_id,\n\t\t\t\t\t\t'member_id' => $this->member_id,\n\t\t\t\t\t\t'field' => 'ticket_id,title,member_id,ticket_no,look,create_time,recipient_id,dispose_id,status_id,ticket_from,priority'\n\t\t\t\t\t];\n\n\t\t\t\t\t$param['page'] = 1;\n\n\t\t\t\t\t$result = D('Ticket')->getWaitReplyTicketData($param, $where);\n\n\t\t\t\t\t$list = $result['tickets'];\n\n\t\t\t\t\t$this->assign('page', $result['page']); //赋值分页输出\n\n\t\t\t\t\tsession('TicketExportWhere', $result['exportWhere']);\n\t\t\t\t} else {\n\t\t\t\t\t$count = D('Ticket')->where($where)->count('ticket_id');\n\n\t\t\t\t\t$Page = new \\Think\\Page($count, 100);\n\n\t\t\t\t\t$field = 'ticket_id,title,ticket_from,ticket_no,priority,member_id,recipient_id,dispose_id,type_id,ticket_model_id,status_id,create_time\n\t                    ,end_time,look';\n\n\t\t\t\t\t$list = D('Ticket')->where($where)->limit($Page->firstRow, $Page->listRows)->order($order)->field($field)->fetchAll();\n\n\t\t\t\t\t$Page->setConfig('prev', \"<i class='iconfont icon-zuo'></i>\");\n\n\t\t\t\t\t$Page->setConfig('next', \"<i class='iconfont icon-you'></i>\");\n\n\t\t\t\t\t$this->assign('page', $Page->show()); //赋值分页输出\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsession('getNewTicketWhere', $where);\n\n\t\t\t//\t         我关注的工单\n\t\t\t$follow = M('ticket_follow')->where(['company_id' => $this->_company_id, 'member_id' => $this->member_id])->field('ticket_id')->select();\n\n\t\t\t$followTicket = $follow ? array_column($follow, 'ticket_id') : [];\n\n\t\t\tforeach ($list as $k => &$v) {\n\t\t\t\t//                最新回复数\n\t\t\t\t$where = ['ticket_id' => $v['ticket_id'], 'look' => 1, 'member_id' => ['neq', $this->member_id]];\n\n\t\t\t\t$v['newReplyNum'] = D('TicketReply')->where($where)->count('reply_id');\n\n\t\t\t\t//                结束状态\n\t\t\t\t$v['end_status_id'] = self::$end_status['status_id'];\n\n\t\t\t\t//\t              获取工单耗时\n\t\t\t\t$takeTime = D('Ticket')->getTicketTakeTime($this->_company_id, $v['ticket_id'], $v['create_time'], $v['end_time']);\n\n\t\t\t\t//\t              已耗时\n\t\t\t\t$v['taking'] = $takeTime['taking'];\n\n\t\t\t\t//\t              总耗时\n\t\t\t\t$v['ztaking'] = $takeTime['ztaking'];\n\n\t\t\t\t//                是否挂起\n\t\t\t\t$suspendWhere = ['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id'], 'start_time' => ['gt', 0], 'close_time' => 0];\n\n\t\t\t\t$v['is_suspend'] = M('ticket_suspend')->where($suspendWhere)->getField('id');\n\n\t\t\t\tif (in_array($v['ticket_id'], $followTicket)) {\n\t\t\t\t\t$v['is_follow'] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\t\t  模板\n\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t//        模板类型\n\t\t$templateTypeName = D('TemplateType')->getNameByLang('type_name');\n\n\t\t$condition = ['company_id' => $this->_company_id];\n\n\t\t//        完成期限\n\t\t$deadlines = M('ticket_deadlines')->where(['company_id' => $this->_company_id])->select();\n\n\t\t$deadTimes = [];\n\n\t\tforeach ($deadlines as $d) {\n\t\t\t$deadTimes[$d['ticket_id']] = $d;\n\t\t}\n\n\t\t$group = D('Group')->where(['company_id' => $this->_company_id, 'closed' => 0, 'ticket_auth' => 10])\n\t\t\t->field('group_id,group_name,parent_id')\n\t\t\t->order('orderby asc')->select();\n\n\t\t$members = D('Member')->where(['company_id' => $this->_company_id])\n\t\t\t->field('name,member_id,face,type,group_id')\n\t\t\t->fetchAll();\n\n\t\t//        权限 - 导入工单\n\t\t$auth['import'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/import', $this->_member['role_id']);\n\n\t\t//        权限 - 导出工单\n\t\t$auth['export'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/export', $this->_member['role_id']);\n\n\t\t//        权限 - 删除工单\n\t\t$auth['delete'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/delete', $this->_member['role_id']);\n\n\t\t//        权限 - 关注工单\n\t\t$auth['follow'] = D('RoleAuth')->checkRoleAuthByMenu($this->_company_id, 'ticket/follow', $this->_member['role_id']);\n\n\t\t//        模板类型\n\t\t$template_type = D('TemplateType')->where($condition)->field(\"type_id,{$templateTypeName}\")->fetchAll();\n\n\t\t//\t      工单模板\n\t\t$template = D('Ticketmodel')->where($template_map)->field(\"ticket_model_id,{$templateName}\")->fetchAll();\n\n\t\t$this->assign('auth', $auth);\n\n\t\t$this->assign('groups', fetchAll($group, 'group_id'));\n\n\t\t$department = getSubjectTree($group, 'group_id', 'parent_id', 'children', 0);\n\n\t\t$this->assign('jsonDepartmentData', json_encode($department));\n\n\t\t$this->assign('members', $members);\n\n\t\t$this->assign('deadTimes', $deadTimes);\n\n\t\t$this->assign('view_source', $view_source);\n\n\t\t$this->assign('show_end_ticket', $show_end_ticket);\n\n\t\t$this->assign('source', 'ticket');\n\n\t\t$this->assign('exportList', C('EXPORT'));\n\n\t\t$this->assign('ticketView', D('TicketView')->getTicketView($this->_company_id));\n\n\t\t$this->assign('templateType', $template_type);\n\n\t\t$this->assign('template', $template);\n\n\t\t$this->assign('ticket_status', self::$ticket_status);\n\n\t\t$this->assign('createTimeFilter', D('Ticket')->getCreateTime());\n\n\t\t$this->assign('ticketFromFilter', D('Ticket')->getTicketFrom());\n\n\t\t$this->assign('priorityFilter', D('Ticket')->getPriority());\n\n\t\t$this->assign('ticketStatusData', json_encode(array_values(self::$ticket_status)));\n\n\t\t$this->assign('templateTypeFilter', json_encode(array_values($template_type)));\n\n\t\t$this->assign('memberData', json_encode(array_values($members)));\n\n\t\treturn $list;\n\t}\n\n\n\t/*\n\t * 创建工单\n\t * @param string $id         模板ID\n\t * @param string $request    请求类型\n\t */\n\tpublic function create($id = '', $request = '')\n\t{\n\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => decrypt($id, 'modelID'), 'closed' => 0];\n\n\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\tif ($request == 'area') {\n\t\t\t\t$data = D('Ticket')->getAreaData();\n\t\t\t} else {\n\t\t\t\t$data = D('Ticket')->CreateTicketByUser($this->_company_id, $this->member_id, $template, self::$first_status['status_id'], 'PC');\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$createTicketFormData = D('Ticket')->getCreateTicketForm($template, $where, $this->_company);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('createTicketFormData', $createTicketFormData);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 修改工单\n\t * @param string $id         工单ID\n\t */\n\tpublic function edit($id = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\t$data = D('Ticket')->EditTicketByUser($this->_company_id, $this->member_id, $ticket);\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket['ticket_model_id'], 'closed' => 0];\n\n\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t}\n\n\t\t\t$editTicket = D('Ticket')->getEditTicketForm($ticket, $template, $this->_company);\n\n\t\t\t$ticket = $editTicket['ticket'];\n\n\t\t\t$editTicketFormData = $editTicket['editTicketFormData'];\n\n\t\t\t$this->assign('editTicketFormData', $editTicketFormData);\n\n\t\t\t$this->assign('ticket_model_id', $ticket['ticket_model_id']);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('ticket', $ticket);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 克隆工单\n\t * @param string $id                 工单ID\n\t * @param string $ticket_model_id    模板ID\n\t * @param string $request            请求类型\n\t */\n\tpublic function cloning($id = '', $ticket_model_id = '', $request = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\tif (IS_POST) {\n\t\t\tif ($request == 'area') {\n\t\t\t\t$data = D('Ticket')->getAreaData();\n\t\t\t} else {\n\t\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket_model_id, 'closed' => 0];\n\n\t\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t\t}\n\n\t\t\t\t$data = D('Ticket')->CreateTicketByUser($this->_company_id, $this->member_id, $template, self::$first_status['status_id'], 'PC');\n\n\t\t\t\t$data['url'] = U('detail', ['id' => $data['id']]);\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t} else {\n\t\t\t$templateName = D('Ticketmodel')->getNameByLang('ticket_model_name');\n\n\t\t\t$where = ['company_id' => $this->_company_id, 'ticket_model_id' => $ticket['ticket_model_id'], 'closed' => 0];\n\n\t\t\tif (!$template = M('TicketModel')->where($where)->field(\"*,{$templateName}\")->find()) {\n\t\t\t\t$this->returnError(L('TEMP_NOT'), U('Index/welcome'));\n\t\t\t}\n\n\t\t\t$cloneTicket = D('Ticket')->getEditTicketForm($ticket, $template, $this->_company);\n\n\t\t\t$ticket = $cloneTicket['ticket'];\n\n\t\t\t$cloneTicketFormData = $cloneTicket['editTicketFormData'];\n\n\t\t\t$this->assign('cloneTicketFormData', $cloneTicketFormData);\n\n\t\t\t$this->assign('ticket_model_id', $ticket['ticket_model_id']);\n\n\t\t\t$this->assign('template', $template);\n\n\t\t\t$this->assign('ticket', $ticket);\n\n\t\t\t$this->assign('source', 'create');\n\n\t\t\t$this->display();\n\t\t}\n\t}\n\n\n\t/*\n\t * 工单详情\n\t * @param string $id                 工单ID\n\t * @param string $request            请求类型\n\t * @param string $reply_tab          tab类型 ticket_reply,team_reply,ticket_event\n\t */\n\tpublic function detail($id = 0, $request = '', $reply_tab = 'ticket_reply')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$field = $look = $reply = $member = [];\n\n\t\t//        查询工单信息\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$field['ticket_id'] = $ticket_id;\n\n\t\tif (!$ticket = M('Ticket')->where($field)->find()) {\n\t\t\t$this->returnError(L('TICKET_NOT'), U('Index/welcome'));\n\t\t}\n\n\t\t$ticket['end_status_id'] = self::$end_status['status_id'];\n\n\t\t$ticket['first_status_id'] = self::$first_status['status_id'];\n\n\t\tif (IS_POST)\n\t\t\t$this->ajaxReturn(D('Ticket')->ajaxRequestByDetail($this->_company_id, $this->member_id, $ticket, $request));\n\n\t\t$detailData = D('Ticket')->getTicketDetailData($ticket, $this->_company_id, $this->_member, self::$ticket_status, 'pcTerminal');\n//     // 计算图片数量\n//     $photo_count = !empty($ticket['photo']) ? count($ticket['photo']) : 0;\n\n// $excluded_status_ids = [9, 4, 5, 6];\n//     // 过滤 handlerTicketStatus\n//     if ($photo_count < 2) {\n//         foreach ($detailData['handlerTicketStatus'] as $key => $status) {\n//             if (in_array($status['status_id'], $excluded_status_ids)) {\n//                 unset($detailData['handlerTicketStatus'][$key]);\n//             }\n//         }\n\n//         foreach ($detailData['publisherTicketStatus'] as $key => $status) {\n//             if (in_array($status['status_id'], $excluded_status_ids)) {\n//                 unset($detailData['publisherTicketStatus'][$key]);\n//             }\n//         }\n//     }\n\n//     // 重新索引数组\n//     $detailData['handlerTicketStatus'] = array_values($detailData['handlerTicketStatus']);\n//     $detailData['publisherTicketStatus'] = array_values($detailData['publisherTicketStatus']);\n\n\n\n\n\t\t$this->assign('ticket', $ticket);\n\n\t\t$this->assign('detailData', $detailData);\n\n\t\t$this->assign('nowTime', date('Y-m-d', time()));\n\n\t\t$this->assign('yesTime', date('Y-m-d', strtotime('-1 day')));\n\n\t\t$this->assign('reply_tab', $reply_tab);\n\n\t\t$this->display();\n\t}\n\n\n\tpublic function reply()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$result = D('Ticket')->ticketReplyByUser($this->_company_id, $this->member_id, self::$end_status['status_id']);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\n\n\tpublic function teamReply()\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$result = D('Ticket')->insideReplyByUser($this->_company_id, $this->member_id, self::$end_status['status_id']);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->_empty();\n\t\t}\n\t}\n\n\n\tpublic function satisfy($id = null)\n\t{\n\t\t$ticket = M('Ticket')->where(['ticket_id' => decrypt($id, 'TICKET')])->field('company_id,ticket_id,dispose_id')->find();\n\n\t\tif (!$ticket)\n\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('TICKET_NOT')]);\n\n\t\tif (IS_POST)\n\t\t\t$this->ajaxReturn(D('TicketSatisfy')->CreateSatisfy($ticket));\n\t}\n\n\n\tpublic function config()\n\t{\n\t\t$config = M('ticket_config')->where(['company_id' => $this->_company_id])->find();\n\n\t\tif (IS_POST) {\n\t\t\t$configData = I('post.config');\n\n\t\t\tif (isset($configData['timeout']) && !isInteger($configData['timeout']))\n\t\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('TIME_OUT_NOTE')]);\n\n\t\t\t$data = [\n\t\t\t\t'handler_closed' => $configData['handler'] == 'on' ? 10 : 20,\n\t\t\t\t'publisher_closed' => $configData['publisher'] == 'on' ? 10 : 20,\n\t\t\t\t'feedback' => $configData['msg_feedback'] ?? 20,\n\t\t\t\t'end_operate' => $configData['end_ticket'],\n\t\t\t\t'status_go_back' => $configData['status_go_back'],\n\t\t\t\t'handler_go_back' => $configData['handler_go_back'] == 'on' ? 10 : 20,\n\t\t\t\t'publisher_go_back' => $configData['publisher_go_back'] == 'on' ? 10 : 20,\n\t\t\t\t'overtime' => $configData['timeout'],\n\t\t\t];\n\n\t\t\tif ($configData['status_go_back'] == 10 && $data['handler_go_back'] == 20 && $data['publisher_go_back'] == 20) {\n\t\t\t\t$this->ajaxReturn(['status' => 0, 'msg' => L('SELECT_GO_BACK_ROLE')]);\n\t\t\t}\n\n\t\t\tif ($config) {\n\t\t\t\t$data['id'] = $config['id'];\n\n\t\t\t\t$result = M('ticket_config')->save($data);\n\t\t\t} else {\n\t\t\t\t$data['company_id'] = $this->_company_id;\n\n\t\t\t\t$result = M('ticket_config')->add($data);\n\t\t\t}\n\n\t\t\tif ($result === false) {\n\t\t\t\t$data = ['status' => 0, 'msg' => L('UPDATE_FAILED')];\n\t\t\t} else {\n\t\t\t\t$data = ['status' => 2, 'msg' => L('UPDATE_SUCCESS'), 'url' => U('config')];\n\t\t\t}\n\n\t\t\t$this->ajaxReturn($data);\n\t\t}\n\n\t\t$this->assign('config', $config);\n\n\t\t$this->display();\n\t}\n\n\n\tpublic function urgeTicket()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$result = D('Ticket')->urgeTicket($this->_company_id, $this->member_id);\n\n\t\t\t$this->ajaxReturn($result);\n\t\t} else {\n\t\t\t$this->common->empty();\n\t\t}\n\t}\n\n\n\tpublic function commentReply()\n\t{\n\t\t$result = D('Ticket')->commentReply($this->_company_id, $this->member_id);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\tprotected function getMemberByGroupId($group_id = 0)\n\t{\n\t\t$where = ['company_id' => $this->_company_id, 'closed' => 0, 'type' => 1, \"find_in_set('{$group_id}',group_id)\"];\n\n\t\t$task = D('Member')->where($where)->field('member_id,name')->fetchAll();\n\n\t\t$json = [];\n\n\t\tforeach ($task as $k => $v) {\n\t\t\t$json[] = $v;\n\t\t}\n\n\t\treturn $json;\n\t}\n\n\n\t//    关注工单\n\tpublic function follow($request = '')\n\t{\n\t\t$ids = I('post.ticket_ids');\n\n\t\t$result = D('Ticket')->followTicket($this->_company_id, $this->member_id, $ids, $request);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    删除工单\n\tpublic function delete()\n\t{\n\t\t$ids = I('post.ticket_ids');\n\n\t\t$where['company_id'] = $this->_company_id;\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\tif ($v !== 'on') {\n\t\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$where['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$result = M('ticket')->where($where)->setField(['delete' => 1, 'delete_member_id' => $this->member_id, 'delete_time' => NOW_TIME, 'delete_ip' => get_client_ip()]);\n\n\t\t\tforeach ($ticket_ids as $v) {\n\t\t\t\t//                存储工单事件\n\t\t\t\t$eventData = ['event_type' => 'delete', 'ticket_id' => $v, 'member_id' => $this->member_id];\n\n\t\t\t\tD('TicketEvent')->saveEvent($eventData);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$result = ['status' => 2, 'msg' => L('DELETE_SUCCESS'), 'isReload' => 1];\n\t\t\t} else {\n\t\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    完全删除工单\n\tpublic function complete_delete()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$ids = I('post.ticket_ids');\n\t\t} else {\n\t\t\t$ids = explode(',', I('get.ticket_ids'));\n\t\t}\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\t$result = [];\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\tif ($v !== 'on') {\n\t\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$field['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$tickets = D('Ticket')->where($field)->field('ticket_id')->select();\n\n\t\t\tforeach ($tickets as $v) {\n\t\t\t\t$result = D('Ticket')->deleteTicket($this->_company_id, $v['ticket_id']);\n\n\t\t\t\t$result['url'] = 'recycle';\n\n\t\t\t\tif (!$result['status']) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('DELETE_TICKET_REMIND')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//    恢复工单\n\tpublic function recover()\n\t{\n\t\tif (IS_POST) {\n\t\t\t$ids = I('post.ticket_ids');\n\t\t} else {\n\t\t\t$ids = explode(',', I('get.ticket_ids'));\n\t\t}\n\n\t\t$field['company_id'] = $this->_company_id;\n\n\t\tif (count($ids) > 0) {\n\t\t\t$ticket_ids = [];\n\n\t\t\tforeach ($ids as $k => $v) {\n\t\t\t\t$ticket_ids[$k] = decrypt($v, 'TICKET');\n\t\t\t}\n\n\t\t\t$field['ticket_id'] = ['in', implode(',', $ticket_ids)];\n\n\t\t\t$result = D('Ticket')->where($field)->setField(['delete' => 2]);\n\n\t\t\tforeach ($ticket_ids as $v) {\n\t\t\t\t//                存储工单事件\n\t\t\t\t$eventData = ['event_type' => 'recover', 'ticket_id' => $v, 'member_id' => $this->member_id];\n\n\t\t\t\tD('TicketEvent')->saveEvent($eventData);\n\t\t\t}\n\n\t\t\tif ($result > 0) {\n\t\t\t\t$result = ['status' => 2, 'msg' => L('UPDATE_SUCCESS'), 'isReload' => 1];\n\t\t\t} else {\n\t\t\t\t$result = ['status' => 0, 'msg' => L('UPDATE_FAILED')];\n\t\t\t}\n\t\t} else {\n\t\t\t$result = ['status' => 0, 'msg' => L('RECOVER_TICKET_NOTE')];\n\t\t}\n\n\t\t$this->ajaxReturn($result);\n\t}\n\n\n\t//\t  服务报告\n\tpublic function service_report($id = '')\n\t{\n\t\t$ticket_id = decrypt($id, 'TICKET');\n\n\t\t$ticket = M('ticket')->where(['ticket_id' => $ticket_id])->find();\n\n\t\tif (!$ticket) {\n\t\t\t$this->error(L('DATA_NOT_EXIST'));\n\t\t}\n\n\t\t//        发布人\n\t\t$publish = M('member')->where(['member_id' => $ticket['member_id']])->getField('name');\n\n\t\t//        处理人\n\t\t$handler = M('member')->where(['member_id' => $ticket['dispose_id']])->getField('name');\n\n\t\t//        工单状态\n\t\t$statusName = D('TicketStatus')->getNameByLang('status_name');\n\n\t\t$status_name = M('ticket_status')->where(['status_id' => $ticket['status_id']])->getField($statusName);\n\n\t\t//        优先级\n\t\t$priority = D('Ticket')->getPriority($ticket['priority']);\n\n\t\t//\t      计算工单耗时\n\t\t$takeTime = D('Ticket')->getTicketTakeTime($this->_company_id, $ticket['ticket_id'], $ticket['create_time'], $ticket['end_time']);\n\n\t\t$take_time = $ticket['end_time'] ? $takeTime['ztaking'] : $takeTime['taking']; //总耗时\n\n\t\tif ($take_time['day'])\n\t\t\t$ticket['take_time'] .= $take_time['day'] . L('DAYS');\n\n\t\tif ($take_time['hour'])\n\t\t\t$ticket['take_time'] .= $take_time['hour'] . L('HOURS');\n\n\t\tif ($take_time['min'])\n\t\t\t$ticket['take_time'] .= $take_time['min'] . L('MINUTES');\n\n\t\t//        计算是否超时\n\t\t$deadtime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $ticket['ticket_id']])->getField('deadtime');\n\n\t\t//\t\t组件\n\t\tif ($deadtime > 0) {\n\t\t\t//\t\t\t完成期限\n\t\t\t$ticket['deadtime'] = getDates($deadtime);\n\n\t\t\t//\t\t\t是否超时\n\t\t\t$ticket['is_timeout'] = checkTicketIsTimeout($ticket['deadtime'], $ticket['end_time']);\n\n\t\t\t//\t\t\t超时时长\n\t\t\t$ticket['timeout'] = checkTicketIsTimeout($ticket['deadtime'], $ticket['end_time'], 1);\n\t\t}\n\t\t//\t\t全局\n\t\telse {\n\t\t\t//\t\t\t全局完成期限\n\t\t\t$overtime = M('ticket_config')->where(['company_id' => $this->_company_id])->getField('overtime');\n\n\t\t\t$ticket['deadtime'] = getDates(intval($ticket['create_time'] + $overtime * 3600));\n\n\t\t\t//\t\t\t是否超时\n\t\t\t$ticket['is_timeout'] = checkIsTimeout($ticket['ticket_id'], $ticket['create_time'], $ticket['end_time']);\n\n\t\t\t//\t\t\t超时时长\n\t\t\t$ticket['timeout'] = checkIsTimeout($ticket['ticket_id'], $ticket['create_time'], $ticket['end_time'], 1);\n\t\t}\n\n\n\t\t//        表单详情\n\t\t$ticketForm = M('ticket_form')->alias('a')\n\t\t\t->join('feel_ticket_detail as b on a.ticket_form_id = b.ticket_form_id')\n\t\t\t->where(['ticket_id' => $ticket_id, 'a.company_id' => $ticket['company_id']])\n\t\t\t->field('a.ticket_form_id,ticket_form_description,ticket_form_type,ticket_form_content')\n\t\t\t->order('orderby asc')\n\t\t\t->select();\n\n\t\t$ticketFormHtml = '';\n\n\t\tforeach ($ticketForm as $k1 => $tf) {\n\t\t\tif ($tf['ticket_form_type'] != 'textarea') {\n\t\t\t\t$ticketFormHtml .= \"<li>\n\t\t\t\t<div class='item-div1'>{$tf['ticket_form_description']}</div>\n\t\t\t\t<div class='item-div2'>\" . getHtml($tf['ticket_form_content']) . \"</div>\n\t\t\t\t</li>\";\n\t\t\t} else {\n\t\t\t\t$ticketFormHtml .= \"<li class='textarea-form'>\n\t\t            <div class='ticket-form-title'>{$tf['ticket_form_description']}</div>\n\t\t            <div class='ticket-form-content'>\" . getHtml($tf['ticket_form_content']) . \"</div>\n\t\t            </li>\";\n\t\t\t}\n\t\t}\n\n\t\t//        通过邮件发送的工单内容\n\t\tif ($ticket['ticket_from'] == 'Email' && $ticket['content']) {\n\t\t\t$ticketFormHtml .= \"<li class='textarea-form'>\n                <div class='ticket-form-title'>\" . L('TICKET_CONTENT') . \"</div>\n                <div class='ticket-form-content'>\" . getHtml($ticket['content']) . \"</div>\n                </li>\";\n\t\t}\n\n\t\t//\t      发布工单的附件\n\t\t$createFiles = M('upload_file')->where(['ticket_id' => $ticket_id, 'file_form' => 'ticket'])->select();\n\n\t\t$createAttachItems = '';\n\n\t\tforeach ($createFiles as $ct) {\n\t\t\t$createAttachItems .= \"<div class='attach-item'><a href='{$ct['file_link']}'>{$ct['file_name']}</a><span>（\" . getFileSize($ct['file_size']) . \"）</span></div>\";\n\t\t}\n\n\t\tif ($createAttachItems) {\n\t\t\t$ticketFormHtml .= \"<li class='textarea-form'><div class='ticket-form-title'>\" . L('ATTACHMENT') . \"</div><div class='ticket-form-content create-attach'>{$createAttachItems}</div></li>\";\n\t\t}\n\n\t\t//        工单图片\n\t\tif ($ticket['photo']) {\n\t\t\t$img = 1;\n\n\t\t\t$photo = unserialize($ticket['photo']);\n\n\t\t\t$ticketFormHtml .= \"<li class='ticket-image clearfix'>\";\n\n\t\t\tforeach ($photo as $tp) {\n\t\t\t\t$mr = '';\n\n\t\t\t\tif (judgeParity($img) == 2)\n\t\t\t\t\t$mr = 'mr0';\n\n\t\t\t\t$ticketFormHtml .= \"<div class='upload-img {$mr}'><img src='{$tp}' alt='' style='margin-right:15px'></div>\";\n\n\t\t\t\t$img++;\n\t\t\t}\n\n\t\t\t$ticketFormHtml .= \"</li>\";\n\t\t}\n\n\t\t//\t\t  PDF模板\n\t\t$pdfTemplate = C('PDF_TEMP')['template'];\n\n\t\t//\t\t  详情模板\n\t\t$detailTemplate = C('PDF_TEMP')['detail'];\n\n\t\t$detailKeySearch = [\n\t\t\t'{{title}}',\n\t\t\t'{{status}}',\n\t\t\t'{{priority}}',\n\t\t\t'{{publish}}',\n\t\t\t'{{handler}}',\n\t\t\t'{{create_time}}',\n\t\t\t'{{dispose_time}}',\n\t\t\t'{{end_time}}',\n\t\t\t'{{take_time}}',\n\t\t\t'{{deadtime}}',\n\t\t\t'{{is_timeout}}',\n\t\t\t'{{timeout}}'\n\t\t];\n\n\t\t$detailKeyReplace = [\n\t\t\tL('TICKET_TITLE'),\n\t\t\tL('TICKET_STATUS'),\n\t\t\tL('PRIORITY'),\n\t\t\tL('PUBLISHER'),\n\t\t\tL('HANDLER'),\n\t\t\tL('RELEASE_TIME'),\n\t\t\tL('PROCESS_TIME'),\n\t\t\tL('COMPLETION_TIME'),\n\t\t\tL('TIME_CONSUMING'),\n\t\t\tL('DEADLINES_COMPONENTS'),\n\t\t\tL('WHETHER_TIMEOUT'),\n\t\t\tL('TIMEOUT'),\n\t\t];\n\n\t\t$detailValueSearch = [\n\t\t\t'{{ticket.title}}',\n\t\t\t'{{ticket.status}}',\n\t\t\t'{{ticket.priority}}',\n\t\t\t'{{ticket.publish}}',\n\t\t\t'{{ticket.handler}}',\n\t\t\t'{{ticket.create_time}}',\n\t\t\t'{{ticket.dispose_time}}',\n\t\t\t'{{ticket.end_time}}',\n\t\t\t'{{ticket.take_time}}',\n\t\t\t'{{ticket.deadtime}}',\n\t\t\t'{{ticket.is_timeout}}',\n\t\t\t'{{ticket.timeout}}',\n\t\t\t'{{ticket.ticket_form}}'\n\t\t];\n\n\t\t$detailValueReplace = [\n\t\t\t$ticket['title'],\n\t\t\t$status_name,\n\t\t\t$priority,\n\t\t\t$publish,\n\t\t\t$handler ? $handler : 'none',\n\t\t\tgetDates($ticket['create_time']),\n\t\t\t$ticket['dispose_time'] ? getDates($ticket['dispose_time']) : 'none',\n\t\t\t$ticket['end_time'] ? getDates($ticket['end_time']) : 'none',\n\t\t\t$ticket['take_time'],\n\t\t\t$ticket['deadtime'],\n\t\t\t$ticket['is_timeout'],\n\t\t\t$ticket['timeout'],\n\t\t\t$ticketFormHtml\n\t\t];\n\n\t\t$detailTemplate = str_replace($detailKeySearch, $detailKeyReplace, $detailTemplate);\n\n\t\t$detailTemplate = str_replace($detailValueSearch, $detailValueReplace, $detailTemplate);\n\n\t\t//\t\t工单回复\n\t\t$reply = D(\"TicketReply\")\n\t\t\t->alias('a')\n\t\t\t->join('feel_member AS b ON a.member_id = b.member_id', 'left')\n\t\t\t->where([\"ticket_id\" => $ticket_id])\n\t\t\t->field('reply_id,ticket_id,reply_content,reply_time,b.face,b.name')\n\t\t\t->order(\"reply_id asc\")\n\t\t\t->fetchAll();\n\n\t\t$replyContent = '';\n\n\t\tforeach ($reply as &$rv1) {\n\t\t\tif (!$rv1['face'])\n\t\t\t\t$rv1['face'] = C('HTTP_PROTOCOL') . \"://\" . C('HOST_DOMAIN') . \"/Attachs/face/default.jpg\";\n\n\t\t\t$attachments = M('upload_file')->where(['reply_id' => $rv1['reply_id']])->select();\n\n\t\t\t$attachItem = '';\n\n\t\t\tforeach ($attachments as $at) {\n\t\t\t\t$attachItem .= \"<div class='attach-item'><a href='{$at['file_link']}'>{$at['file_name']}</a><span>（\" . getFileSize($at['file_size']) . \"）</span></div>\";\n\t\t\t}\n\n\t\t\t$replyTemplate = C('PDF_TEMP')['reply'];\n\n\t\t\t$replyTemplate = str_replace(\n\t\t\t\t[\"{{face}}\", \"{name}\", \"{{reply_time}}\", \"{{reply_content}}\", \"{{reply_attach}}\"],\n\t\t\t\t[$rv1['face'], $rv1['name'], date('Y-m-d H:i', $rv1['reply_time']), htmlspecialchars_decode($rv1['reply_content']), $attachItem],\n\t\t\t\t$replyTemplate\n\t\t\t);\n\n\t\t\t$replyContent .= $replyTemplate;\n\t\t}\n\n\t\t$stylesheet = file_get_contents('./Public/css/pdf.css');\n\n\t\t$pdfTemplate .= \"<style>{$stylesheet}</style>\";\n\n\t\t$replyContent = \"<div class='feeldesk-reply-content'><div class='reply-title'>\" . L('REPLY_LIST') . \"</div>{$replyContent}</div>\";\n\n\t\tVendor('mpdf.mpdf');\n\n\t\t//\t\t文件名称\n\t\t$filename = \"{$ticket['title']} \" . L('SERVICE_REPORT');\n\n\t\t$pdfTemplate = str_replace(['{{header}}', '{{detail_content}}', '{{reply_content}}'], [$filename, $detailTemplate, $replyContent], $pdfTemplate);\n\n\t\t//\t\t语言 | 纸张格式 | 默认字体大小 | 默认字体 | 左边距 | 右边距 | 上边距 | 下边距\n\t\t$mpdf = new \\mPDF('zh-cn', 'A4', 0, '宋体', 0, 0, 0, 0);\n\n\t\t$mpdf->useAdobeCJK = true;\n\n\t\t//// // echo $pdfTemplate;die;\n\n\t\t//\t\t设置标题\n\t\t$mpdf->SetTitle($filename . \".pdf\");\n\n\t\t//\t\t写入css内容\n\t\t$mpdf->WriteHTML($stylesheet, 1);\n\n\t\t//\t\t写入文件内容\n\t\t$mpdf->WriteHTML($pdfTemplate);\n\n\t\t//\t\t$mpdf->Output($filename,true);\n\n\t\t//\t\t$mpdf->Output($filename,'d');直接下载\n\n\t\t$mpdf->Output($filename . \".pdf\", 'I');\n\n\t\t$mpdf->Output();\n\t}\n\n\n\t//    导入工单\n\tpublic function import()\n\t{\n\t\t$result = D('Ticket')->importTicket($this->_company_id, $this->member_id, self::$first_status['status_id']);\n\n\t\t$this->ajaxReturn($result);\n\t}\n\t//    导出工单\n\tpublic function exportMoney($action = '')\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$export = C('EXPORT');\n\t\t\t$year = I('get.year');  \n\t\t\t$startTimeStamp = strtotime($year . '-01-01 00:00:00');  // 当前年1月1日00:00:00\n\t\t\t$endTimeStamp = strtotime(($year + 1) . '-01-01 00:00:00'); // 下一年1月1日00:00:00\n\t\t\t// echo 'Start Time: ' . date('Y-m-d H:i:s', $startTimeStamp) . '<br>';\n\t\t\t// echo 'End Time: ' . date('Y-m-d H:i:s', $endTimeStamp) . '<br>';\n\t\t\t$startTimeStamp = '1730390405';\n\t\t\t$endTimeStamp = '1735488005';\n\t\t\t$where = array(\n\t\t\t\t'status_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(9, 4, 5, 6),\n\t\t\t\t),\n\t\t\t\t'type_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(5),\n\t\t\t\t),\n\t\t\t\t'ticket_model_id' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => array(5),\n\t\t\t\t),\n\t\t\t\t'create_time' => array(\n\t\t\t\t\t0 => array('egt', $startTimeStamp),  // 起始时间\n\t\t\t\t\t1 => array('elt', $endTimeStamp),    // 结束时间\n\t\t\t\t),\n\t\t\t\t'sort' => 'desc',\n\t\t\t\t'order' => 'ticket_id',\n\t\t\t\t'company_id' => 1,\n\t\t\t\t'audit_status' => array(\n\t\t\t\t\t0 => 'in',\n\t\t\t\t\t1 => '1,3',\n\t\t\t\t),\n\t\t\t\t'delete' => 2,\n\t\t\t);\n\t\t\t// $where = session('TicketExportWhere');\n\t\t\t// echo \"查询条件: \" .  print_r($where); // 这将输出查询条件的值\n\t\t\t$data = I('get.exportList');\n\n\t\t\t$member_id = I('get.id');\n\t\t\t$commissionRates = I('get.commissionRates');  // 获取传来的提成率数据\n\n\t\t\tif (!$data)\n\t\t\t\t$this->ajaxReturn(['msg' => L('SELECT_EXPORT')]);\n\n\t\t\t$exportList = $tableHeader = $letter = $excelData = [];\n\n\n\t\t\t$field = ['ticket_id'];\n\n\t\t\tforeach ($export as $k => $v) {\n\t\t\t\tif (in_array($v['identity'], $data)) {\n\t\t\t\t\t$exportList[$k] = $v['identity'];\n\n\t\t\t\t\tarray_push($field, $v['identity']);\n\n\t\t\t\t\t$tableHeader[] = $v['name'];\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//\t\t\t过滤非ticket数据表字段\n\t\t\t$field = implode(',', array_diff($field, ['timeout', 'timeout_period', 'reply_content']));\n\n\t\t\tif ($member_id > 0) {\n\t\t\t\t$tickets = $this->$action($member_id, 'export', $where, $field);\n\t\t\t} else {\n\t\t\t\t$tickets = $this->$action('export', $where, $field);\n\t\t\t}\n\n\t\t\t//\t\t\t模板自定义表单\n\t\t\tif (isset($data[5]['form'])) {\n\t\t\t\tforeach ($data[5]['form'] as $formField) {\n\t\t\t\t\t$nv = $formField['name'];\n\t\t\t\t\tarray_push($tableHeader, $nv);\n\n\t\t\t\t}\n\n\t\t\t\t// If 'reply_content' is in $data, move it to the end of $tableHeader\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$key = array_search('reply_content', $data);\n\t\t\t\t\tarray_push($tableHeader, $tableHeader[$key]);\n\t\t\t\t\tunset($tableHeader[$key]);\n\t\t\t\t\t$tableHeader = array_values($tableHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//            整合表格数据，列内容\n\t\t\tforeach ($tickets as $k => $v) {\n\t\t\t\tforeach ($v as $k1 => &$v1) {\n\t\t\t\t\tif (!in_array($k1, $exportList) && $k1 != 'ticket_id')\n\t\t\t\t\t\tunset($v[$k1]);\n\t\t\t\t}\n\n\t\t\t\t$excelData[] = $v;\n\t\t\t}\n\n\t\t\t//\t\t\t交集 - 存在发布人、处理人、回复则查询用户表\n\t\t\tif (array_intersect($data, ['member_id', 'dispose_id', 'reply_content'])) {\n\t\t\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\t\t\t} else {\n\t\t\t\t$members = [];\n\t\t\t}\n\n\t\t\t$excelData = $this->feelecYieldToArray($excelData);\n\n\t\t\t$yieldData = [];\n\n\t\t\tforeach ($excelData as $k => $v) {\n\t\t\t\t$yieldData[$k] = $v;\n\n\t\t\t\tif ($v['ticket_from'])\n\t\t\t\t\t$yieldData[$k]['ticket_from'] = D('Ticket')->getTicketFrom($v['ticket_from']);\n\n\t\t\t\tif ($v['status_id'])\n\t\t\t\t\t$yieldData[$k]['status_id'] = D('Ticket')->getFieldInfo('ticket_status', ['status_id' => $v['status_id']], 'status_name', 1);\n\n\t\t\t\tif ($v['ticket_model_id'])\n\t\t\t\t\t$yieldData[$k]['ticket_model_id'] = D('Ticket')->getFieldInfo('ticket_model', ['ticket_model_id' => $v['ticket_model_id']], 'ticket_model_name', 1);\n\n\t\t\t\tif ($v['priority'])\n\t\t\t\t\t$yieldData[$k]['priority'] = D('Ticket')->getPriority($v['priority']);\n\n\t\t\t\tif ($v['member_id'])\n\t\t\t\t\t$yieldData[$k]['member_id'] = $members[$v['member_id']]['name'];\n\n\t\t\t\tif ($v['dispose_id'])\n\t\t\t\t\t$yieldData[$k]['dispose_id'] = $members[$v['dispose_id']]['name'];\n\n\t\t\t\tif ($v['create_time'])\n\t\t\t\t\t$yieldData[$k]['create_time'] = \"\\t\" . getDates($v['create_time']);\n\n\t\t\t\tif ($v['end_time'])\n\t\t\t\t\t$yieldData[$k]['end_time'] = \"\\t\" . getDates($v['end_time']);\n\n\t\t\t\t//\t\t\t\t  是否超时\n\t\t\t\tif (in_array('timeout', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout'] = strip_tags($timeout);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  超时时长\n\t\t\t\tif (true) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\n\t\t\t\t\t$timeout_period = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time'], true);\n\n\n\t\t\t\t\t$yieldData[$k]['timeout_period'] = strip_tags($timeout_period);\n\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  模板自定义表单值\n\t\t\t\tif (isset($data[5]['form'])) {\n\t\t\t\t\tforeach ($data[5]['form'] as $formField) {\n\t\t\t\t\t\t$dv = $formField['id'];\n\t\t\t\t\t\t$content = D('Ticket')->getFieldInfo('ticket_detail', ['ticket_id' => $v['ticket_id'], 'ticket_form_id' => $dv], 'ticket_form_content');\n\n\t\t\t\t\t\t$yieldData[$k][] = \"\\t\" . strip_tags(getHtml($content));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  回复内容\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$replys = M('ticket_reply')\n\t\t\t\t\t\t->where(['ticket_id' => $v['ticket_id'], 'company_id' => $this->_company_id])\n\t\t\t\t\t\t->field('member_id,reply_content,reply_time')\n\t\t\t\t\t\t->order('reply_id asc')\n\t\t\t\t\t\t->select();\n\n\t\t\t\t\t$replys = $this->feelecYieldToArray($replys);\n\n\t\t\t\t\tforeach ($replys as $r) {\n\t\t\t\t\t\t$content = strip_tags(getHtml($r['reply_content']));\n\n\t\t\t\t\t\t$reply_content[] = \"【回复人：{$members[$r['member_id']]['name']}，回复时间：\" . getDates($r['reply_time']) . \"，回复内容：{$content}】\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($reply_content) && $reply_content) {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = str_replace([\"\\r\", \"\\n\"], '', implode(' | ', $reply_content));//去除换行，防止单元格内容换行\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tunset($reply_content, $replys);\n\t\t\t\t}\n\n\t\t\t\tunset($yieldData[$k]['ticket_id']);\n\t\t\t}\n\n\t\t\t$excel = ['header' => $tableHeader, 'excelData' => $yieldData];\n\n\n\t\t\tsession('TicketExcelData', $excel);\n\n\n\t\t\t$journalTypesToSummarize = ['SSCI', 'SCI', 'SCOPUS', 'AHCI', 'EI', 'ESCI', 'CA', 'ES', 'Scopus不检索', '普刊'];\n\n\t\t\t// 初始化汇总数组\n\t\t\t$commissionData = [];\n\n\t\t\t// 初始化汇总数组\n\t\t\t$commissionData = [];\n\n\t\t\t// 第一步：汇总每个发布人在每个月每种期刊类型下的总金额\n\t\t\tforeach ($yieldData as $row) {\n\t\t\t\t$publisher = isset($row['member_id']) ? $row['member_id'] : '未知发布人';\n\t\t\t\t$journalType = isset($row[0]) ? trim($row[0]) : '未知期刊类型';\n\t\t\t\t$fullAmount = isset($row[2]) ? floatval($row[2]) : 0.00;\n\t\t\t\t$location = isset($row[4]) && !empty($row[4]) ? $row[4] : '徐州';\n\t\t\t\t$createTime = isset($row['create_time']) ? $row['create_time'] : '';\n\t\t\t\t$timeout_period = isset($row['timeout_period']) ? $row['timeout_period'] : '';\n\t\t\t\t$status_id = isset($row['status_id']) ? $row['status_id'] : '';\n\n\n\t\t\t\t// 解析超时时长\n\t\t\t\t$timeout_seconds = $this->parseTimeoutPeriod($timeout_period);\n\t\t\t\tif ($timeout_seconds !== false) {\n\t\t\t\t\t$timestamp = strtotime($createTime) + $timeout_seconds;\n\t\t\t\t\t$month = date('Y-m', $timestamp);\n\t\t\t\t} else {\n\t\t\t\t\t// 如果无法解析超时时长，使用创建时间的月份\n\t\t\t\t\t$timestamp = strtotime($createTime);\n\t\t\t\t\tif ($timestamp === false) {\n\t\t\t\t\t\tcontinue; // 无法解析创建时间，跳过\n\t\t\t\t\t}\n\t\t\t\t\t$month = date('Y-m', $timestamp);\n\t\t\t\t}\n\n\t\t\t\t// 跳过未知期刊类型或金额为0的行\n\t\t\t\tif ($journalType === '未知期刊类型' || $fullAmount <= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 仅汇总指定的期刊类型\n\t\t\t\tif (!in_array($journalType, $journalTypesToSummarize)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 检查是否在 $commissionRates 中定义（非 ES 类型）\n\t\t\t\tif ($journalType !== 'ES' && !isset($commissionRates[$journalType])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// 初始化发布人、月份的数据结构\n\t\t\t\tif (!isset($commissionData[$publisher])) {\n\t\t\t\t\t$commissionData[$publisher] = [\n\t\t\t\t\t\t'journal_sums' => array_fill_keys($journalTypesToSummarize, 0.00),\n\t\t\t\t\t\t'total_commission' => 0.00\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (!isset($commissionData[$publisher]['monthly'][$month])) {\n\t\t\t\t\t$commissionData[$publisher]['monthly'][$month] = [\n\t\t\t\t\t\t'location' => $location,\n\t\t\t\t\t\t'journal_sums' => array_fill_keys($journalTypesToSummarize, 0.00),\n\t\t\t\t\t\t'commission' => 0.00\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t// 累加全款\n\t\t\t\t$commissionData[$publisher]['monthly'][$month]['journal_sums'][$journalType] += $fullAmount;\n\n\t\t\t\t// 同时，累加各期刊类型的总金额（用于显示）\n\t\t\t\t$commissionData[$publisher]['journal_sums'][$journalType] += $fullAmount;\n\t\t\t}\n\n\t\t\t// 第二步：根据每个月的汇总金额计算提成\n\t\t\tforeach ($commissionData as $publisher => &$data) {\n\t\t\t\tforeach ($data['monthly'] as $month => &$monthData) {\n\t\t\t\t\t$monthCommission = 0.00;\n\n\t\t\t\t\tforeach ($journalTypesToSummarize as $jt) {\n\t\t\t\t\t\t$totalAmount = $monthData['journal_sums'][$jt];\n\n\t\t\t\t\t\tif ($totalAmount > 0) {\n\t\t\t\t\t\t\tif ($jt === 'ES') {\n\t\t\t\t\t\t\t\t// 对于 ES 期刊类型，根据发布地点进行不同的提成计算\n\t\t\t\t\t\t\t\t$location = $monthData['location'];\n\t\t\t\t\t\t\t\tif ($location == '徐州') {\n\t\t\t\t\t\t\t\t\tif ($totalAmount <= 20000) {\n\t\t\t\t\t\t\t\t\t\t$commission = $totalAmount * 0.05;\n\t\t\t\t\t\t\t\t\t} elseif ($totalAmount <= 50000) {\n\t\t\t\t\t\t\t\t\t\t$commission = (20000 * 0.05) + (($totalAmount - 20000) * 0.07);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$commission = (20000 * 0.05) + (30000 * 0.07) + (($totalAmount - 50000) * 0.10);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// 非徐州地区，根据不同人员的提成规则\n\t\t\t\t\t\t\t\t\tif ($publisher === '花永超') {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.20;\n\t\t\t\t\t\t\t\t\t} elseif ($publisher === '钱燕燕') {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.16;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$rate = 0.10;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$commission = $totalAmount * $rate;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$monthCommission += $commission;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// 其他期刊类型的提成计算\n\t\t\t\t\t\t\t\t$rates = $commissionRates[$jt];\n\t\t\t\t\t\t\t\t$rate = 0.00;\n\n\t\t\t\t\t\t\t\t// 排序阈值\n\t\t\t\t\t\t\t\t$thresholds = array_filter(array_keys($rates), function ($t) {\n\t\t\t\t\t\t\t\t\treturn $t !== 'above'; });\n\t\t\t\t\t\t\t\tsort($thresholds, SORT_NUMERIC);\n\n\t\t\t\t\t\t\t\tforeach ($thresholds as $threshold) {\n\t\t\t\t\t\t\t\t\tif ($totalAmount <= $threshold) {\n\t\t\t\t\t\t\t\t\t\t$rate = $rates[$threshold];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// 如果金额超过所有阈值，使用 'above' 的提成比例\n\t\t\t\t\t\t\t\tif ($totalAmount > 350000 && isset($rates['above'])) {\n\t\t\t\t\t\t\t\t\t$rate = $rates['above'];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$commission = $totalAmount * $rate;\n\t\t\t\t\t\t\t\t$monthCommission += $commission;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// 记录本月的提成\n\t\t\t\t\t$monthData['commission'] = $monthCommission;\n\n\t\t\t\t\t// 累加到发布人的总提成\n\t\t\t\t\t$data['total_commission'] += $monthCommission;\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($data);\n\t\t\tunset($monthData);\n\n\t\t\t// 第三步：计算总计\n\t\t\t$totals = array_fill_keys($journalTypesToSummarize, 0.00);\n\t\t\t$totalCommission = 0.00;\n\n\t\t\tforeach ($commissionData as $publisher => $data) {\n\t\t\t\tforeach ($journalTypesToSummarize as $jt) {\n\t\t\t\t\t$totals[$jt] += $data['journal_sums'][$jt];\n\t\t\t\t}\n\t\t\t\t$totalCommission += $data['total_commission'];\n\t\t\t}\n\n\t\t\t// 将总计添加到汇总数据\n\t\t\t$commissionData['总计'] = [\n\t\t\t\t'journal_sums' => $totals,\n\t\t\t\t'total_commission' => $totalCommission\n\t\t\t];\n\n\t\t\t// 第四步：准备显示数据\n\t\t\t$displayData = [];\n\n\t\t\tforeach ($commissionData as $publisher => $data) {\n\t\t\t\tif ($publisher === '总计') {\n\t\t\t\t\t$displayData[$publisher] = $data['journal_sums'];\n\t\t\t\t\t$displayData[$publisher]['总提成'] = $data['total_commission'];\n\t\t\t\t} else {\n\t\t\t\t\t$displayData[$publisher] = $data['journal_sums'];\n\t\t\t\t\t$displayData[$publisher]['总提成'] = $data['total_commission'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 将汇总数据存入会话\n\t\t\tsession('commissionData', $displayData);\n\t\t\tsession('journalTypesToSummarize', $journalTypesToSummarize);\n\n\n\t\t\t$this->ajaxReturn(['msg' => 'success', 'url' => U('Ticket/exportMoney'), 'download' => true]);\n\t\t} else {\n\t\t\t$tableHeader = session('TicketExcelData')['header'];\n\t\t\t$excelData = session('TicketExcelData')['excelData'];\n\t\t\t$commissionData = session('commissionData');\n\t\t\t$journalTypesToSummarize = session('journalTypesToSummarize');\n\n\t\t\t// 将所有数据存储在会话中\n\t\t\tsession('TicketExportData', [\n\t\t\t\t'excelData' => $excelData,\n\t\t\t\t'header' => $tableHeader,\n\t\t\t\t'commissionData' => $commissionData,\n\t\t\t\t'journalTypesToSummarize' => $journalTypesToSummarize\n\t\t\t]);\n\t\t\t// session('TicketExportData', ['excelData' => $excelData, 'header' => $tableHeader]);\n\t\t\theader(\"Location: http://47.122.66.77/Ticket/allTicket3\");\n\t\t\texit();  // 终止脚本执行，确保跳转后没有其他内容输出\n\n\t\t}\n\t}\n\n\t// 定义辅助函数\n\tfunction parseTimeoutPeriod($timeoutStr)\n\t{\n\t\t// 初始化各部分时间为0\n\t\t$days = 0;\n\t\t$hours = 0;\n\t\t$minutes = 0;\n\n\t\t// 使用正则表达式提取天、时、分\n\t\tif (preg_match('/(\\d+)天/', $timeoutStr, $matches)) {\n\t\t\t$days = intval($matches[1]);\n\t\t}\n\n\t\tif (preg_match('/(\\d+)时/', $timeoutStr, $matches)) {\n\t\t\t$hours = intval($matches[1]);\n\t\t}\n\n\t\tif (preg_match('/(\\d+)分/', $timeoutStr, $matches)) {\n\t\t\t$minutes = intval($matches[1]);\n\t\t}\n\n\t\t// 计算总秒数\n\t\t$total_seconds = $days * 86400 + $hours * 3600 + $minutes * 60;\n\n\t\t// 如果总秒数为0，说明未能解析任何时间部分\n\t\tif ($total_seconds === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $total_seconds;\n\t}\n\n\t//    导出工单\n\n\tpublic function export($action = '')\n\t{\n\t\tif (IS_AJAX) {\n\t\t\t$export = C('EXPORT');\n\n\t\t\t$where = session('TicketExportWhere');\n\n\t\t\t$data = I('get.exportList');\n\n\t\t\t$member_id = I('get.id');\n\n\t\t\tif (!$data)\n\t\t\t\t$this->ajaxReturn(['msg' => L('SELECT_EXPORT')]);\n\n\t\t\t$exportList = $tableHeader = $letter = $excelData = [];\n\n\t\t\t$field = ['ticket_id'];\n\n\t\t\tforeach ($export as $k => $v) {\n\t\t\t\tif (in_array($v['identity'], $data)) {\n\t\t\t\t\t$exportList[$k] = $v['identity'];\n\t\t\t\t\tarray_push($field, $v['identity']);\n\t\t\t\t\t$tableHeader[] = $v['name'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 确保照片列在表头中\n\t\t\tif (!in_array('照片', $tableHeader)) {\n\t\t\t\t$tableHeader[] = '照片';  // 添加照片列\n\t\t\t}\n\n\t\t\t// 过滤非ticket数据表字段\n\t\t\t$field = implode(',', array_diff($field, ['timeout', 'timeout_period', 'reply_content']));\n\n\t\t\tif ($member_id > 0) {\n\t\t\t\t$tickets = $this->$action($member_id, 'export', $where, $field);\n\t\t\t} else {\n\t\t\t\t$tickets = $this->$action('export', $where, $field);\n\t\t\t}\n\n\t\t\t// 处理模板自定义表单\n\t\t\tif ($data['form']) {\n\t\t\t\tforeach ($data['form']['name'] as $nv) {\n\t\t\t\t\tarray_push($tableHeader, $nv);\n\t\t\t\t}\n\n\t\t\t\t// 将回复内容移至表格最后一列\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$key = array_search('reply_content', $data);\n\t\t\t\t\tarray_push($tableHeader, $tableHeader[$key]);\n\t\t\t\t\tunset($tableHeader[$key]);\n\t\t\t\t\t$tableHeader = array_values($tableHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 整合表格数据\n\t\t\tforeach ($tickets as $k => $v) {\n\t\t\t\tif (isset($v['ticket_id'])) {\n\t\t\t\t\t$photoData = M('ticket')->where(['ticket_id' => $v['ticket_id']])->getField('photo');\n\t\t\t\t\t$v['photos'] = '暂无相关图片';  // 默认值\n\t\t\t\t\tif ($photoData) {\n\t\t\t\t\t\t$photos = unserialize($photoData);\n\t\t\t\t\t\tif (is_array($photos)) {\n\t\t\t\t\t\t\t$formattedPhotos = [];\n\t\t\t\t\t\t\tforeach ($photos as $index => $photo) {\n\t\t\t\t\t\t\t\tif (filter_var($photo, FILTER_VALIDATE_URL)) {\n\t\t\t\t\t\t\t\t\t// 分别标记定金和全款图片\n\t\t\t\t\t\t\t\t\t$formattedPhotos[] = $index === 0 ? \"定金: {$photo}\" : ($index === 1 ? \"全款: {$photo}\" : $photo);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// 将格式化后的图片URLs添加到 $v 数组\n\t\t\t\t\t\t\tif (!empty($formattedPhotos)) {\n\t\t\t\t\t\t\t\t$v['photos'] = implode(' | ', $formattedPhotos);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 清理不需要的键\n\t\t\t\tforeach ($v as $k1 => &$v1) {\n\t\t\t\t\tif (!in_array($k1, $exportList) && $k1 != 'ticket_id' && $k1 != 'photos')\n\t\t\t\t\t\tunset($v[$k1]);\n\t\t\t\t}\n\n\t\t\t\t$excelData[] = $v;\n\t\t\t}\n\n\t\t\t//\t\t\t交集 - 存在发布人、处理人、回复则查询用户表\n\t\t\tif (array_intersect($data, ['member_id', 'dispose_id', 'reply_content'])) {\n\t\t\t\t$members = D('Member')->where(['company_id' => $this->_company_id])->field('member_id,name')->fetchAll();\n\t\t\t} else {\n\t\t\t\t$members = [];\n\t\t\t}\n\t\t\t$excelData = $this->feelecYieldToArray($excelData);\n\n\t\t\t$yieldData = [];\n\n\t\t\t// 为表格每行添加正确的数据\n\t\t\tforeach ($excelData as $k => $v) {\n\t\t\t\t$yieldData[$k] = $v;\n\n\t\t\t\tif ($v['ticket_from'])\n\t\t\t\t\t$yieldData[$k]['ticket_from'] = D('Ticket')->getTicketFrom($v['ticket_from']);\n\n\t\t\t\tif ($v['status_id'])\n\t\t\t\t\t$yieldData[$k]['status_id'] = D('Ticket')->getFieldInfo('ticket_status', ['status_id' => $v['status_id']], 'status_name', 1);\n\n\t\t\t\tif ($v['ticket_model_id'])\n\t\t\t\t\t$yieldData[$k]['ticket_model_id'] = D('Ticket')->getFieldInfo('ticket_model', ['ticket_model_id' => $v['ticket_model_id']], 'ticket_model_name', 1);\n\n\t\t\t\tif ($v['priority'])\n\t\t\t\t\t$yieldData[$k]['priority'] = D('Ticket')->getPriority($v['priority']);\n\n\t\t\t\tif ($v['member_id'])\n\t\t\t\t\t$yieldData[$k]['member_id'] = $members[$v['member_id']]['name'];\n\n\t\t\t\tif ($v['recipient_id'])\n\t\t\t\t\t$yieldData[$k]['recipient_id'] = $members[$v['recipient_id']]['name'];\n\n\t\t\t\tif ($v['dispose_id'])\n\t\t\t\t\t$yieldData[$k]['dispose_id'] = $members[$v['dispose_id']]['name'];\n\n\t\t\t\tif ($v['create_time'])\n\t\t\t\t\t$yieldData[$k]['create_time'] = \"\\t\" . getDates($v['create_time']);\n\n\t\t\t\tif ($v['end_time'])\n\t\t\t\t\t$yieldData[$k]['end_time'] = \"\\t\" . getDates($v['end_time']);\n\n\t\t\t\t//\t\t\t\t  是否超时\n\t\t\t\tif (in_array('timeout', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout'] = strip_tags($timeout);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  超时时长\n\t\t\t\tif (in_array('timeout_period', $data)) {\n\t\t\t\t\t//                    完成期限\n\t\t\t\t\t$deadTime = M('ticket_deadlines')->where(['company_id' => $this->_company_id, 'ticket_id' => $v['ticket_id']])->getField('deadtime');\n\n\t\t\t\t\tif ($deadTime) {\n\t\t\t\t\t\t$timeout_period = checkTicketIsTimeoutByCron($deadTime, $tickets[$v['ticket_id']]['end_time']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$timeout_period = checkIsTimeout($v['ticket_id'], $tickets[$v['ticket_id']]['create_time'], $tickets[$v['ticket_id']]['end_time'], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t$yieldData[$k]['timeout_period'] = strip_tags($timeout_period);\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  模板自定义表单值\n\t\t\t\tif ($data['form']) {\n\t\t\t\t\tforeach ($data['form']['id'] as $dv) {\n\t\t\t\t\t\t$content = D('Ticket')->getFieldInfo('ticket_detail', ['ticket_id' => $v['ticket_id'], 'ticket_form_id' => $dv], 'ticket_form_content');\n\n\t\t\t\t\t\t$yieldData[$k][] = \"\\t\" . strip_tags(getHtml($content));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\t\t\t\t  回复内容\n\t\t\t\tif (in_array('reply_content', $data)) {\n\t\t\t\t\t$replys = M('ticket_reply')\n\t\t\t\t\t\t->where(['ticket_id' => $v['ticket_id'], 'company_id' => $this->_company_id])\n\t\t\t\t\t\t->field('member_id,reply_content,reply_time')\n\t\t\t\t\t\t->order('reply_id asc')\n\t\t\t\t\t\t->select();\n\n\t\t\t\t\t$replys = $this->feelecYieldToArray($replys);\n\n\t\t\t\t\tforeach ($replys as $r) {\n\t\t\t\t\t\t$content = strip_tags(getHtml($r['reply_content']));\n\n\t\t\t\t\t\t$reply_content[] = \"【回复人：{$members[$r['member_id']]['name']}，回复时间：\" . getDates($r['reply_time']) . \"，回复内容：{$content}】\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($reply_content) && $reply_content) {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = str_replace([\"\\r\", \"\\n\"], '', implode(' | ', $reply_content)); //去除换行，防止单元格内容换行\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$yieldData[$k]['reply_content'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tunset($reply_content, $replys);\n\t\t\t\t}\n\t\t\t\tif (isset($v['photos'])) {\n\t\t\t\t\t$yieldData[$k]['photos'] = $v['photos'];\n\t\t\t\t}\n\n\t\t\t\tunset($yieldData[$k]['ticket_id']);\n\t\t\t}\n\n\t\t\t$excel = ['header' => $tableHeader, 'excelData' => $yieldData];\n\n\t\t\tsession('TicketExcelData', $excel);\n\n\t\t\t$this->ajaxReturn(['msg' => 'success', 'url' => U('Ticket/export'), 'download' => true]);\n\t\t} else {\n\t\t\t$tableHeader = session('TicketExcelData')['header'];\n\t\t\t$excelData = session('TicketExcelData')['excelData'];\n\n\t\t\t$filename = 'Ticket-' . date('YmdHis') . '.csv';\n\n\t\t\t$csv = new Csv();\n\t\t\t$csv->exportCsv($excelData, $tableHeader, $filename);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\tpublic function getPhotoUrls($serializedPhotos)\n\t{\n\t\t$photoUrls = [];\n\t\t$photos = unserialize($serializedPhotos);\n\t\tif (is_array($photos)) {\n\t\t\tforeach ($photos as $photo) {\n\t\t\t\tif (filter_var($photo, FILTER_VALIDATE_URL)) {\n\t\t\t\t\t$photoUrls[] = $photo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn implode(\", \", $photoUrls); // Combine all URLs into a single string, separated by commas\n\t}\n\n\n\n\t/**\n\t * Yield生成器处理\n\t * @param array $data 需要处理的数据\n\t * @return Generator\n\t */\n\tpublic function feelecYieldToArray($data)\n\t{\n\t\tforeach ($data as $value) {\n\t\t\tyield $value;\n\t\t}\n\t}\n}\n"
        }
    ]
}